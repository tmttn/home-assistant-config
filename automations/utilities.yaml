---
#-
#        _   _ _ _ _   _
#  _   _| |_(_) (_) |_(_) ___  ___
# | | | | __| | | | __| |/ _ \/ __|
# | |_| | |_| | | | |_| |  __/\__ \
#  \__,_|\__|_|_|_|\__|_|\___||___/
#
#
#- from github.com/tmttn/home-assistant-config


- alias: "Utilities: turn on espresso machine 10 minutes before waking up"
  id: "utilities_turn-on-espresso-machine-10-minutes-before-waking-up"
  trigger:
    platform: template
    value_template: >
      {{ states("sensor.time")[0:5] == states("sensor.half_hour_before_alarm") }}
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: "on"
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: "off"
  action:
    service: switch.turn_on
    entity_id: switch.espresso_machine

- alias: "Utilities: washing machine, dishwasher,tumble dryer or espresso machine started or finished"
  id: "utilities_washing-machine-dishwasher-tumble-dryer-or-espresso-machine-started-or-finished"
  trigger:
    - platform: state
      entity_id: binary_sensor.dishwasher
    - platform: state
      entity_id: binary_sensor.washing_machine
    - platform: state
      entity_id: binary_sensor.tumble_dryer
    - platform: state
      entity_id: binary_sensor.espresso_machine
  variables:
    from_state: "{{ trigger.from_state.state }}"
    to_state: "{{ trigger.to_state.state }}"
    name: "{{ trigger.entity_id.split('.', 1)[1] }}"
  condition: "{{ (to_state == 'on' and from_state == 'off') or (to_state == 'off' and from_state == 'on') }}"
  action:
    service: input_datetime.set_datetime
    data:
      entity_id: "input_datetime.{{ name }}_{{ to_state }}"
      timestamp: "{{ now().timestamp() }}"

- alias: "Utilities: washing machine notification"
  id: "utilities_washing-machine-notification"
  trigger:
    platform: state
    entity_id: binary_sensor.washing_machine
    from: "off"
    to: "on"
  action:
    service: script.utility_notification
    data:
      name: "washing_machine"
      emojis: "üëöüëï"

- alias: "Utilities: dishwasher notification"
  id: "utilities_dishwasher-notification"
  trigger:
    platform: state
    entity_id: binary_sensor.dishwasher
    from: "off"
    to: "on"
  action:
    service: script.utility_notification
    data:
      name: "dishwasher"
      emojis: "üçΩüç≥"

- alias: "Utilities: tumble dryer notification"
  id: "utilities_tumble-dryer-notification"
  trigger:
    platform: state
    entity_id: binary_sensor.tumble_dryer
    from: "off"
    to: "on"
  action:
    service: script.utility_notification
    data:
      name: "tumble_dryer"
      emojis: "üß∫üí¶"

- alias: "Utilities: espresso machine notification"
  id: "utilities_espresso-machine-notification"
  trigger:
    platform: state
    entity_id: binary_sensor.espresso_machine
    from: "off"
    to: "on"
  action:
    service: script.utility_notification
    data:
      name: "espresso_machine"
      emojis: "‚òïÔ∏èü•§"

- alias: "Utilities: toggle espresso machine on/off"
  id: "utilities_toggle-espresso-machine-on-off"
  mode: single
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kitchen_meds_tom
  condition: "{{ trigger.event.data.event == 1001 }}" #Long click
  action:
    service: switch.toggle
    entity_id: switch.espresso_machine
