---
#-
#             _
#   ___ _   _| |__   ___
#  / __| | | | '_ \ / _ \
# | (__| |_| | |_) |  __/
#  \___|\__,_|_.__/ \___|
#
#
#- from github.com/tmttn/home-assistant-config

- alias: "Cube: perform operation"
  mode: parallel
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: mi_magic_cube
  variables:
    event: "{{ trigger.event.data.event }}"
  condition: "{{ (event | string)[1:-1] == '00' }}"
  action:
    choose:
      # Change cube mode by rotating from one side to another side
      - conditions: >
          {% set event = event | string %}
          {% set correct_start = event[:3] in ("100", "200", "300", "400", "500", "600") %}
          {% set first_last_different = event[0] != event[-1] %}
          {{ correct_start and first_last_different }}
        sequence:
          - service: input_select.select_option
            entity_id: input_select.cube_mode
            data:
              option: >
                {% if is_state('input_select.cube_mode', 'Hue') %}
                  Brightness
                {% elif is_state('input_select.cube_mode', 'Brightness') %}
                  Volume
                {% elif is_state('input_select.cube_mode', 'Volume') %}
                  Hue
                {% endif %}
          - service: tts.google_translate_say
            data:
              entity_id: media_player.google_home
              language: en
              message: >
                {{ states("input_select.cube_mode") }} mode

      # Shuffle Spotify song by shaking cube
      - conditions:
          - "{{ event == 7007 }}"
          - "{{ is_state_attr('media_player.spotify', 'source', 'Google Home') }}"
        sequence:
          - service: media_player.shuffle_set
            entity_id: media_player.spotify
            data:
              shuffle: true
          - service: media_player.media_next_track
            entity_id: media_player.spotify

      # Pause and play Spotify song by tapping cube on side 1
      - conditions:
          - "{{ event in (1001, 2002, 3003, 4004, 5005, 6006) }}"
          - "{{ is_state_attr('media_player.spotify', 'source', 'Google Home') }}"
        sequence:
          service: media_player.media_play_pause
          entity_id: media_player.spotify

      # Start music by throwing the cube
      - conditions: "{{ event == 7008 }}"
        sequence:
          service: script.start_spotify_playlist_of_nearest_person
          data:
            source: Google Home
            entity_id: media_player.google_home

- alias: "Cube: rotate the cube"
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: mi_magic_cube
  variables:
    event: "{{ trigger.event.data.event }}"
  condition: "{{ (event | string)[1:-1] != '00' or event < 0 }}"
  action:
    choose:
      - conditions: # Change hue of living room lights
          condition: state
          entity_id: input_select.cube_mode
          state: "Hue"
        sequence:
          - variables:
              hue_sat: "{{ state_attr('light.tv_led', 'hs_color') or [30, 56] }}"
          - service: light.turn_on
            entity_id: light.tv_led
            data:
              hs_color:
                - >
                  {% set delta = event / 200 %}
                  {% set new_hue = [([0, (hue_sat[0] + delta)]|max), 360]|min %}
                  {{ new_hue|round(3) }}
                - "{{ hue_sat[1] }}"

      - conditions: # Change brightness of living room lights
          condition: state
          entity_id: input_select.cube_mode
          state: "Brightness"
        sequence:
          service: light.turn_on
          entity_id: light.tv_led
          data:
            brightness: >
              {% set brightness = state_attr('light.tv_led', 'brightness') %}
              {% set delta = event / 450 %}
              {% set new_brightness = [([0, (brightness + delta)]|max), 255]|min %}
              {{ new_brightness|int }}

      - conditions: # Change speaker volume
          condition: state
          entity_id: input_select.cube_mode
          state: "Volume"
        sequence:
          - service: media_player.volume_set
            entity_id: media_player.google_home
            data: # 90 deg is 10%
              volume_level: >
                {% set max_change = 0.15 %}
                {% set dV = [event / 100 / 900, max_change] | min %}
                {{ (states.media_player.google_home.attributes.volume_level + dV)|round(2) }}
          - service: tts.google_translate_say
            data:
              entity_id: media_player.google_home
              language: en
              message: >
                Volume set to {{ (state_attr("media_player.google_home", "volume_level")|float(default=0) * 100)|int }}.
