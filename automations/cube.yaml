---
#-
#             _
#   ___ _   _| |__   ___
#  / __| | | | '_ \ / _ \
# | (__| |_| | |_) |  __/
#  \___|\__,_|_.__/ \___|
#
#
#- from github.com/basnijholt/home-assistant-config

- alias: "Cube: perform operation"
  mode: parallel
  trigger:
    platform: event
    event_type: zha_event
    event_data:
      device_ieee: "00:15:8d:00:02:a7:00:5c"
  action:
    choose:
      # XXX: flip doesn't work
      # Change cube mode by shifting on one side, or rotating from one side to another side
      - conditions: >
          {{ trigger.event.data.command in ('slide', 'flip') }}
        sequence:
          - service: input_select.select_option
            entity_id: input_select.cube_mode
            data:
              option: >
                {% set side = trigger.event.data.args['activated_face'] %}
                {{ {1: "Volume", 3: "Hue", 5: "Brightness"}[side] }}
          - condition: state
            entity_id: media_player.tv
            state: "on"
          - service: notify.tv
            data:
              message: >
                Cube set to {{ states("input_select.cube_mode") }}

      # Shuffle Spotify song by shaking cube
      - conditions:
          - "{{ trigger.event.data.command == 'shake' }}"
          - "{{ is_state_attr('media_player.spotify', 'source', 'LS50 Wireless') }}"
        sequence:
          - service: media_player.shuffle_set
            entity_id: media_player.spotify
            data:
              shuffle: true
          - service: media_player.media_next_track
            entity_id: media_player.spotify

      # Pause and play Spotify song by tapping cube on side 1
      - conditions:
          - "{{ trigger.event.data.command == 'knock' }}"
          - "{{ trigger.event.data.args['activated_face'] == 1 }}"
          - "{{ is_state_attr('media_player.spotify', 'source', 'LS50 Wireless') }}"
        sequence:
          service: media_player.media_play_pause
          entity_id: media_player.spotify

      # Start music by throwing the cube
      - conditions: "{{ trigger.event.data.command == 'drop' }}"
        sequence:
          service: script.start_spotify_playlist_of_nearest_person
          data:
            source: LS50 Wireless
            entity_id: media_player.kef_ls50

      # Change hue of living room lights by rotation
      - conditions: >
          {{ trigger.event.data.command.startswith('rotate_')
              and is_state('input_select.cube_mode', 'Hue') }}
        sequence:
          - variables:
              hue_sat: "{{ state_attr('light.sphere_1', 'hs_color') or [30, 56] }}"
          - service: light.turn_on
            entity_id: light.living_room_lights
            data:
              hs_color:
                - >
                  {% set angle = trigger.event.data.args['relative_degrees'] %}
                  {% set delta = angle / 2 %}
                  {% set new_hue = [([0, (hue_sat[0] + delta)]|max), 360]|min %}
                  {{ new_hue|round(3) }}
                - "{{ hue_sat[1] }}"

      # Change brightness of living room lights by rotation
      - conditions: >
          {{ trigger.event.data.command.startswith('rotate_')
              and is_state('input_select.cube_mode', 'Brightness') }}
        sequence:
          service: light.turn_on
          entity_id: light.living_room_lights
          data:
            brightness: >
              {% set brightness = state_attr('light.sphere_1', 'brightness') %}
              {% set angle = trigger.event.data.args['relative_degrees'] %}
              {% set delta = angle / 0.45 %}
              {% set new_brightness = [([0, (brightness + delta)]|max), 255]|min %}
              {{ new_brightness|int }}

      # Change speaker volume by rotation
      - conditions: >
          {{ trigger.event.data.command.startswith('rotate_')
          and is_state('input_select.cube_mode', 'Volume') }}
        sequence:
          - service: media_player.volume_set
            entity_id: media_player.kef_ls50
            data: # 90 deg is 10%
              volume_level: >
                {% set max_change = 0.15 %}
                {% set angle = trigger.event.data.args['relative_degrees'] %}
                {% set dV = [angle / 100, max_change] | min %}
                {{ (states.media_player.kef_ls50.attributes.volume_level + dV)|round(2) }}
          - condition: state
            entity_id: media_player.tv
            state: "on"
          - service: notify.tv
            data:
              message: >
                Volume set to {{ state_attr("media_player.kef_ls50", "volume_level") }}
