---
- alias: "Light: next colors in the bedroom"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom
        event: 1004
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
        event: 1002
  action:
    - service: input_select.select_next
      entity_id: input_select.last_script_bedroom
    - service: script.turn_on
      data_template:
        entity_id: "{{ states('input_select.last_script_bedroom') }}"

- alias: "Light: next colors in the living room"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_living_room
        event: 1004
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_living_room
        event: 1002
  action:
    service: script.next_colors
    data:
      input_select: input_select.last_script_living_room

- alias: "Light: toggle max/min brightness in the bedroom"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom
        event: 1002
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
        event: 4002
  action:
    service: script.increase_brightness
    data:
      group: light.bedroom_lights

- alias: "Light: toggle max/min brightness in the living room"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_living_room
        event: 1002
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_living_room
        event: 4002
  action:
    service: script.increase_brightness
    data:
      group: light.living_room_lights

- alias: "Light: toggle kitchen ceiling"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
  action:
    service_template: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.ceiling_kitchen
      transition: 1

- alias: "Light: turn on kitchen counter if sleep mode is off"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "on"
  condition:
    condition: state
    entity_id: input_boolean.sleep_mode
    state: "off"
  action:
    service: light.turn_on
    entity_id: light.kitchen_counter

- alias: "Light: turn off kitchen counter"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.kitchen_counter

- alias: "Light: toggle bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
  action:
    service_template: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.ceiling_bathroom
      transition: 1

- alias: "Light: toggle toilet"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
  action:
    service_template: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.toilet
      transition: 1

# XXX: do not have these sensors yet
# - alias: "Light: automatically turn on the bedroom"
#   initial_state: "on"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_bedroom
#     to: "on"
#   condition:
#     - condition: state
#       entity_id: light.bedroom_lights
#       state: "off"
#     - condition: state
#       entity_id: input_boolean.sleep_mode
#       state: "off"
#   action:
#     - service: light.turn_on
#       entity_id: light.bedroom_lights
#       data_template:
#         brightness: 255
#         xy_color: >
#           {{ state_attr("sensor.circadian_values", "xy_color")|list	}}
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.bedroom_lights_auto_on

# - alias: "Light: automatically turn off the bedroom"
#   initial_state: "on"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_bedroom
#       to: "off"
#   condition:
#     - condition: state
#       entity_id: input_boolean.bedroom_lights_auto_on
#       state: "on"
#     - condition: state
#       entity_id: light.bedroom_lights
#       state: "on"
#   action:
#     - service: light.turn_off
#       entity_id: light.bedroom_lights
#       data:
#         transition: 10

# - alias: "Light: turn off bedroom lights auto switch"
#   trigger:
#     - platform: state
#       entity_id: light.bedroom_lights
#       to: "off"
#     - platform: event
#       event_type: deconz_event
#       event_data:
#         id: dimmer_switch_bedroom
#     - platform: event
#       event_type: deconz_event
#       event_data:
#         id: smart_switch_bedroom
#   condition:
#     condition: state
#     entity_id: input_boolean.bedroom_lights_auto_on
#     state: "on"
#   action:
#     service: input_boolean.turn_off
#     entity_id: input_boolean.bedroom_lights_auto_on

# XXX: do not have the lights yet!
# - alias: "Light: turn on hall"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_hall
#     - platform: state
#       entity_id: group.persons
#       from: not_home
#       to: home
#     - platform: state
#       entity_id: binary_sensor.openclose_front_door
#       from: "off"
#       to: "on"
#   condition:
#     condition: sun
#     after: sunset
#     after_offset: "-0:30:00"
#   action:
#    service: light.turn_on
#    data:
#      entity_id:
#        - light.stairs_lights  # XXX: install these lights
#        - light.hall_lights
#      transition: 1

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
    state: "off"
  action:
    service_template: light.turn_off
    entity_id: light.toilet

- alias: "Light: turn off bathroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    state: "off"
  action:
    service_template: light.turn_off
    entity_id: light.ceiling_bathroom

# XXX: install these lights
# - alias: "Light: turn off hall (extra check)"
#   description: In case the other automation failed
#   trigger:
#     platform: time_pattern
#     minutes: "/30"
#   condition:
#     platform: state
#     entity_id: binary_sensor.activity_in_hall
#     state: "off"
#   action:
#     service_template: light.turn_off
#     entity_id:
#       - light.hall_lights
#       - light.stairs_lights

- alias: "Light: turn off kitchen (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    platform: state
    entity_id: binary_sensor.activity_in_hall
    state: "off"
  action:
    service_template: light.turn_off
    entity_id: light.kitchen_lights
