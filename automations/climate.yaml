---
#-
#       _ _                 _
#   ___| (_)_ __ ___   __ _| |_ ___
#  / __| | | '_ ` _ \ / _` | __/ _ \
# | (__| | | | | | | | (_| | ||  __/
#  \___|_|_|_| |_| |_|\__,_|\__\___|
#
#
#- from github.com/basnijholt/home-assistant-config

- alias: "Climate: turn on the heating 30 min before waking up"
  trigger:
    platform: template
    value_template: >
      {{ states("sensor.time")[0:5] == states("sensor.half_hour_before_alarm") }}
  condition:
    condition: state
    entity_id:
      - input_boolean.alarm_clock
      - input_boolean.automatic_temperature
    state: "on"
  action:
    service: script.set_high_temperature

- alias: "Climate: turn on the heating when going home"
  trigger:
    platform: numeric_state
    entity_id: proximity.home
    below: 6
    above: 1
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: time
      after: "16:00:00"
      before: "22:00:00"
    - "{{ is_state_attr('proximity.home', 'dir_of_travel', 'towards') }}"
    - "{{ not is_state_attr('climate.thermostat', 'temperature', states('input_number.temperature_high')) }}"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "on"
  action:
    - service: script.set_high_temperature
    - service: notify.all_iphones
      data:
        title: "Climate"
        message: "Automatically turned on the heating ğŸ¥µâ„ƒ"

- alias: "Climate: turn off the heating at 22:00"
  trigger:
    platform: time
    at: "22:00"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "off"
    - "{{ not is_state_attr('climate.thermostat', 'temperature', states('input_number.temperature_low')|float) }}"
  action:
    - service: script.set_low_temperature
    - service: notify.all_iphones
      data:
        message: "Turned off the heating ğŸ¥¶, click to turn it on again?"
        data:
          push:
            category: turn_on_heating

- alias: "Climate: turn on heating again after notification"
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: TURN_ON_HEATING
  action:
    service: script.set_high_temperature

- alias: "Climate: set outside temperature every hour"
  trigger:
    platform: time_pattern
    hours: "/1"
  action:
    service: mqtt.publish
    data:
      topic: actions/otmonitor/outside
      payload_template: >
        {{ state_attr("weather.huis", "temperature") }}
