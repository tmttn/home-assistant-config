---
#-
#       _ _                 _
#   ___| (_)_ __ ___   __ _| |_ ___
#  / __| | | '_ ` _ \ / _` | __/ _ \
# | (__| | | | | | | | (_| | ||  __/
#  \___|_|_|_| |_| |_|\__,_|\__\___|
#
#
#- from github.com/tmttn/home-assistant-config

- alias: "Climate: turn on the bathroom heating in the early morning"
  trigger:
    platform: time
    at: "05:30"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "off"
    - "{{ not is_state_attr('climate.bathroom', 'temperature', states('input_number.temperature_moderate')|float(default=0)) }}"
  action:
    - service: script.set_moderate_temperature_bathroom
    - service: notify.all_iphones
      data:
        title: "Climate"
        message: "Automatically turned on the bathroom heating 🛁🥵℃"

- alias: "Climate: turn off the bathroom heating in the morning"
  trigger:
    platform: time
    at: "11:00"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "off"
    - "{{ not is_state_attr('climate.bathroom', 'temperature', states('input_number.temperature_low')|float(default=0)) }}"
  action:
    - service: script.set_low_temperature_bathroom
    - service: notify.all_iphones
      data:
        message: "Turned off the bathroom heating 🛁🥶"

- alias: "Climate: turn on the heating 30 min before waking up"
  trigger:
    platform: template
    value_template: >
      {{ states("sensor.time")[0:5] == states("sensor.half_hour_before_alarm") }}
  condition:
    condition: state
    entity_id:
      - input_boolean.alarm_clock
      - input_boolean.automatic_temperature
    state: "on"
  action:
    - service: script.set_moderate_temperature
    - service: notify.all_iphones
      data:
        title: "Climate"
        message: "Automatically turned on the heating 🥵℃"

- alias: "Climate: increase the heating for the afternoon"
  trigger:
    platform: time
    at: "11:00"
  condition:
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "off"
    - condition: state
      entity_id:
        - input_boolean.automatic_temperature
      state: "on"
  action:
    - service: script.set_high_temperature

- alias: "Climate: turn on the heating when going home"
  trigger:
    platform: numeric_state
    entity_id: proximity.home
    below: 6
    above: 1
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: time
      after: "16:00:00"
      before: "23:00:00"
    - "{{ is_state_attr('proximity.home', 'dir_of_travel', 'towards') }}"
    - "{{ not is_state_attr('climate.living_room', 'temperature', states('input_number.temperature_high')) }}"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "on"
  action:
    - service: script.set_high_temperature
    - service: notify.all_iphones
      data:
        title: "Climate"
        message: "Automatically turned on the heating 🥵℃"

- alias: "Climate: turn off the heating at 23:00"
  trigger:
    platform: time
    at: "23:00"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_temperature
      state: "on"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "off"
    - "{{ not is_state_attr('climate.living_room', 'temperature', states('input_number.temperature_low')|float(default=0)) }}"
  action:
    - service: script.set_low_temperature
    - service: notify.all_iphones
      data:
        message: "Turned off the heating 🥶, click to turn it on again?"
        data:
          push:
            category: turn_on_heating

- alias: "Climate: turn on heating again after notification"
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: TURN_ON_HEATING
  action:
    service: script.set_high_temperature

- alias: "Climate: warning when heating on and back door open"
  trigger:
    platform: state
    entity_id: binary_sensor.openclose_back_door
    to: "on"
    for: "00:05:00"
  condition: "{{ state_attr('climate.living_room', 'temperature') >= 18 }}"
  action:
    - repeat:
        while:
          - condition: state
            entity_id: binary_sensor.openclose_back_door
            state: "on"
          - condition: template
            value_template: "{{ repeat.index <= 6 }}"
        sequence:
          - service: notify.all
            data:
              title: "Climate"
              message: "The back door is open and the heating is on! ⚠️ Warning #{{ repeat.index }}!"
          - delay: "00:05:00"
    - condition: state
      entity_id: binary_sensor.openclose_back_door
      state: "on"
    - service: notify.all
      data:
        title: "Climate"
        message: "Turning off the heating!"
    - service: evohome.set_zone_override
      data:
        entity_id: climate.living_room
        setpoint: >
          {{ states("input_number.temperature_low") }}
