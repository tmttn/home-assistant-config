---
#-
#  _ _       _     _
# | (_) __ _| |__ | |_
# | | |/ _` | '_ \| __|
# | | | (_| | | | | |_
# |_|_|\__, |_| |_|\__|
#      |___/
#
#- from github.com/basnijholt/home-assistant-config


#  __  __                         _   _ _       _     _
# |  \/  | __ _ _ __  _   _  __ _| | | (_) __ _| |__ | |_ ___
# | |\/| |/ _` | '_ \| | | |/ _` | | | | |/ _` | '_ \| __/ __|
# | |  | | (_| | | | | |_| | (_| | | | | | (_| | | | | |_\__ \
# |_|  |_|\__,_|_| |_|\__,_|\__,_|_| |_|_|\__, |_| |_|\__|___/
#                                         |___/

- alias: "Light: next colors in the bedroom"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom
        event: 1004  # Double click
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
        event: 4002  # Lowest button
  action:
    - service: input_select.select_next
      entity_id: input_select.last_script_bedroom
    - service: script.turn_on
      data_template:
        entity_id: "{{ states('input_select.last_script_bedroom') }}"

- alias: "Light: next colors in the living room"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_living_room
        event: 1004  # Double click
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_living_room
        event: 4002  # Lowest button
  action:
    service: script.next_colors
    data:
      input_select: input_select.last_script_living_room

- alias: "Light: bright white lights the living room"
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: dimmer_switch_living_room
      event: 2000  # Second from highest button
  condition:
    condition: state
    entity_id: light.living_room_lights
    state: "on"
  action:
    - service: script.white_lights_living_room
    - service: light.turn_on
      entity_id: light.living_room_lights
      data:
        brightness: 255

- alias: "Light: bright white lights the bedroom"
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: dimmer_switch_bedroom
      event: 2000  # Second from highest button
  condition:
    condition: state
    entity_id: light.bedroom_lights
    state: "on"
  action:
    - service: script.white_lights_bedroom
    - service: light.turn_on
      entity_id: light.bedroom_lights
      data:
        brightness: 255

- alias: "Light: toggle max/min brightness in the bedroom"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom
        event: 1002  # Single click
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
        event: 1002  # Top button
  action:
    service: script.increase_brightness
    data:
      group: light.bedroom_lights

- alias: "Light: toggle max/min brightness in the living room"
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_living_room
        event: 1002  # Single click
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_living_room
        event: 1002  # Top button
  action:
    service: script.increase_brightness
    data:
      group: light.living_room_lights

#     _         _                        _   _        _ _       _     _
#    / \  _   _| |_ ___  _ __ ___   __ _| |_(_) ___  | (_) __ _| |__ | |_ ___
#   / _ \| | | | __/ _ \| '_ ` _ \ / _` | __| |/ __| | | |/ _` | '_ \| __/ __|
#  / ___ \ |_| | || (_) | | | | | | (_| | |_| | (__  | | | (_| | | | | |_\__ \
# /_/   \_\__,_|\__\___/|_| |_| |_|\__,_|\__|_|\___| |_|_|\__, |_| |_|\__|___/
#                                                         |___/

#  _  ___ _       _
# | |/ (_) |_ ___| |__   ___ _ __
# | ' /| | __/ __| '_ \ / _ \ '_ \
# | . \| | || (__| | | |  __/ | | |
# |_|\_\_|\__\___|_| |_|\___|_| |_|

- alias: "Light: toggle kitchen ceiling"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
  action:
    service_template: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.ceiling_kitchen
      transition: 1

- alias: "Light: turn on kitchen counter if sleep mode is off"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "on"
  condition:
    condition: state
    entity_id: input_boolean.sleep_mode
    state: "off"
  action:
    service: light.turn_on
    entity_id: light.kitchen_counter

- alias: "Light: turn off kitchen counter"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.kitchen_counter

#  ____        _   _
# | __ )  __ _| |_| |__  _ __ ___   ___  _ __ ___
# |  _ \ / _` | __| '_ \| '__/ _ \ / _ \| '_ ` _ \
# | |_) | (_| | |_| | | | | | (_) | (_) | | | | | |
# |____/ \__,_|\__|_| |_|_|  \___/ \___/|_| |_| |_|
#

- alias: "Light: turn on bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "on"
  action:
    service: light.turn_on
    entity_id: light.ceiling_bathroom
    data_template:
      transition: 1
      brightness_pct: >
        {{ states("sensor.circadian_values") }}
      xy_color:
        - '{{ state_attr("sensor.circadian_values", "xy_color")[0] }}'
        - '{{ state_attr("sensor.circadian_values", "xy_color")[1] }}'

- alias: "Light: turn off bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.ceiling_bathroom
    data:
      transition: 1

#  _____     _ _      _
# |_   _|__ (_) | ___| |_
#   | |/ _ \| | |/ _ \ __|
#   | | (_) | | |  __/ |_
#   |_|\___/|_|_|\___|\__|

- alias: "Light: toggle toilet"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
  action:
    service_template: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.toilet
      transition: 1

 #  _   _       _ _                   _       _        _
 # | | | | __ _| | |   __ _ _ __   __| |  ___| |_ __ _(_)_ __ ___
 # | |_| |/ _` | | |  / _` | '_ \ / _` | / __| __/ _` | | '__/ __|
 # |  _  | (_| | | | | (_| | | | | (_| | \__ \ || (_| | | |  \__ \
 # |_| |_|\__,_|_|_|  \__,_|_| |_|\__,_| |___/\__\__,_|_|_|  |___/

- alias: "Light: turn on hall"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_hall
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.openclose_front_door
      from: "off"
      to: "on"
  action:
   service: light.turn_on
   data:
     entity_id:
       - light.stairs_lights
       - light.hall_lights
     transition: 1

- alias: "Light: turn off hall"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_hall
      from: "on"
      to: "off"
  action:
   service: light.turn_off
   data:
     entity_id:
       - light.stairs_lights
       - light.hall_lights
     transition: 1

 #  ____           _
 # | __ )  ___  __| |_ __ ___   ___  _ __ ___
 # |  _ \ / _ \/ _` | '__/ _ \ / _ \| '_ ` _ \
 # | |_) |  __/ (_| | | | (_) | (_) | | | | | |
 # |____/ \___|\__,_|_|  \___/ \___/|_| |_| |_|

- alias: "Light: automatically turn on the bedroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "on"
  condition:
    - condition: state
      entity_id: light.bedroom_lights
      state: "off"
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    - service: light.turn_on
      entity_id: light.bedroom_lights
      data_template:
        brightness: 255
        xy_color:
          - '{{ state_attr("sensor.circadian_values", "xy_color")[0] }}'
          - '{{ state_attr("sensor.circadian_values", "xy_color")[1] }}'
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: automatically turn off the bedroom"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "off"
    for: "00:08:00"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
    - condition: state
      entity_id: light.bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.bedroom_lights
    data:
      transition: 10

- alias: "Light: turn off bedroom lights auto switch"
  trigger:
    - platform: state
      entity_id: light.bedroom_lights
      to: "off"
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom
  condition:
    condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: turn on automatic_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on

#  _____      _                    _               _
# | ____|_  _| |_ _ __ __ _    ___| |__   ___  ___| | _____
# |  _| \ \/ / __| '__/ _` |  / __| '_ \ / _ \/ __| |/ / __|
# | |___ >  <| |_| | | (_| | | (__| | | |  __/ (__|   <\__ \
# |_____/_/\_\\__|_|  \__,_|  \___|_| |_|\___|\___|_|\_\___/

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_toilet
      state: "off"
    - condition: state
      entity_id: light.toilet
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.toilet

- alias: "Light: turn off bathroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bathroom
      state: "off"
    - condition: state
      entity_id: light.ceiling_bathroom
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.ceiling_bathroom

- alias: "Light: turn off kitchen (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_kitchen
      state: "off"
    - condition: state
      entity_id: light.kitchen_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.kitchen_lights

- alias: "Light: turn off hall (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_hall
      state: "off"
    - condition: or
      conditions:
      - condition: state
        entity_id: light.stairs_lights
        state: "on"
      - condition: state
        entity_id: light.hall_lights
        state: "on"
  action:
    service: light.turn_off
    entity_id:
      - light.hall_lights
      - light.stairs_lights

- alias: "Light: turn off bedroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bedroom
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
  action:
    - service: light.turn_off
      entity_id: light.bedroom_lights
    - service: light.turn_off
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
