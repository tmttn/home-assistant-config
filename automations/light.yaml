---
#-
#  _ _       _     _
# | (_) __ _| |__ | |_
# | | |/ _` | '_ \| __|
# | | | (_| | | | | |_
# |_|_|\__, |_| |_|\__|
#      |___/
#
#- from github.com/tmttn/home-assistant-config

#  __  __                         _   _ _       _     _
# |  \/  | __ _ _ __  _   _  __ _| | | (_) __ _| |__ | |_ ___
# | |\/| |/ _` | '_ \| | | |/ _` | | | | |/ _` | '_ \| __/ __|
# | |  | | (_| | | | | |_| | (_| | | | | | (_| | | | | |_\__ \
# |_|  |_|\__,_|_| |_|\__,_|\__,_|_| |_|_|\__, |_| |_|\__|___/
#                                         |___/

# Moved to control_switches.yaml!

#     _         _                        _   _        _ _       _     _
#    / \  _   _| |_ ___  _ __ ___   __ _| |_(_) ___  | (_) __ _| |__ | |_ ___
#   / _ \| | | | __/ _ \| '_ ` _ \ / _` | __| |/ __| | | |/ _` | '_ \| __/ __|
#  / ___ \ |_| | || (_) | | | | | | (_| | |_| | (__  | | | (_| | | | | |_\__ \
# /_/   \_\__,_|\__\___/|_| |_| |_|\__,_|\__|_|\___| |_|_|\__, |_| |_|\__|___/
#                                                         |___/

# _     _       _
# | |   (_)_   _(_)_ __   __ _   _ __ ___   ___  _ __ ___
# | |   | \ \ / / | '_ \ / _` | | '__/ _ \ / _ \| '_ ` _ \
# | |___| |\ V /| | | | | (_| | | | | (_) | (_) | | | | | |
# |_____|_| \_/ |_|_| |_|\__, | |_|  \___/ \___/|_| |_| |_|
#                        |___/

- alias: "Light: turn on living room"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "on"
  action:
    service: light.turn_on
    entity_id: light.living_room_lights

- alias: "Light: turn on cozy lights at sunset"
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 1
  condition:
    condition: state
    entity_id: group.persons
    state: home
  action:
    - service: script.cozy_lights_living_room

- alias: "Light: turn off living room"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.living_room_lights

#  _  ___ _       _
# | |/ (_) |_ ___| |__   ___ _ __
# | ' /| | __/ __| '_ \ / _ \ '_ \
# | . \| | || (__| | | |  __/ | | |
# |_|\_\_|\__\___|_| |_|\___|_| |_|

- alias: "Light: toggle kitchen ceiling"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
  condition:
    alias: "Light is already on, or the light is off and light level is below dark"
    condition: or
    conditions:
      - "{{ is_state('light.kitchen_lights', 'on') }}"
      - condition: and
        conditions:
          - "{{ is_state('light.kitchen_lights', 'off') }}"
          - "{{ states('sensor.motion_sensor_kitchen_light_level')|int(default=0) < 50 }}"
  action:
    service: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.kitchen_lights
      transition: 1

#  ____        _   _
# | __ )  __ _| |_| |__  _ __ ___   ___  _ __ ___
# |  _ \ / _` | __| '_ \| '__/ _ \ / _ \| '_ ` _ \
# | |_) | (_| | |_| | | | | | (_) | (_) | | | | | |
# |____/ \__,_|\__|_| |_|_|  \___/ \___/|_| |_| |_|
#

- alias: "Light: toggle bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
  condition: "{{ not is_state('light.bathroom_lights', trigger.to_state.state) }}"
  action:
    service: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.bathroom_lights
      transition: 1

#  _____     _ _      _
# |_   _|__ (_) | ___| |_
#   | |/ _ \| | |/ _ \ __|
#   | | (_) | | |  __/ |_
#   |_|\___/|_|_|\___|\__|

- alias: "Light: toggle toilet"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
  condition:
    alias: "Light is already on, or the light is off and light level is below dark"
    condition: or
    conditions:
      - "{{ is_state('light.toilet', 'on') }}"
      - condition: and
        conditions:
          - "{{ is_state('light.toilet', 'off') }}"
          - "{{ states('sensor.motion_sensor_toilet_light_level')|int(default=0) < 150 }}"
  action:
    service: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.toilet
      transition: 1


  #  ____           _
  # | __ )  ___  __| |_ __ ___   ___  _ __ ___
  # |  _ \ / _ \/ _` | '__/ _ \ / _ \| '_ ` _ \
  # | |_) |  __/ (_| | | | (_) | (_) | | | | | |
  # |____/ \___|\__,_|_|  \___/ \___/|_| |_| |_|

- alias: "Light: automatically turn on the bedroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "on"
  variables:
    off_lights: >
      {{ expand(state_attr("light.bedroom_lights", "entity_id"))
          | selectattr("state", "eq", "off")
          | map(attribute="entity_id")
          | list }}
  condition:
    - "{{ (off_lights | length) > 0 }}"
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    - alias: Turn on lights that are off
      repeat:
        count: "{{ off_lights | length }}"
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: "{{ off_lights[repeat.index - 1] }}"
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: automatically turn off the bedroom"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "off"
    for: "00:08:00"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
    - condition: state
      entity_id: light.bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.bedroom_lights
    data:
      transition: 10

- alias: "Light: turn off bedroom lights auto switch"
  mode: parallel
  trigger:
    - platform: state
      entity_id: light.bedroom_lights
      to: "off"
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_bedroom
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom_tom
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_bedroom_tanja
    - platform: event
      event_type: deconz_event
      event_data:
        id: bedroom_wall_switch
  condition:
    condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: turn on automatic_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on

- alias: "Light: turn off bedroom after 2 hours of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    from: "on"
    to: "off"
    for: "02:00:00"
  condition: "{{ is_state('light.bedroom_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.bedroom_lights

  #   ____                 _     _              _                           
  #  / ___|_   _  ___  ___| |_  | |__   ___  __| |_ __ ___   ___  _ __ ___  
  # | |  _| | | |/ _ \/ __| __| | '_ \ / _ \/ _` | '__/ _ \ / _ \| '_ ` _ \ 
  # | |_| | |_| |  __/\__ \ |_  | |_) |  __/ (_| | | | (_) | (_) | | | | | |
  #  \____|\__,_|\___||___/\__| |_.__/ \___|\__,_|_|  \___/ \___/|_| |_| |_|

- alias: "Light: automatically turn on the guest bedroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    to: "on"
  variables:
    off_lights: >
      {{ expand(state_attr("light.guest_bedroom_lights", "entity_id"))
          | selectattr("state", "eq", "off")
          | map(attribute="entity_id")
          | list }}
  condition:
    - "{{ (off_lights | length) > 0 }}"
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_guest_bedroom_lights
      state: "on"
  action:
    - alias: Turn on lights that are off
      repeat:
        count: "{{ off_lights | length }}"
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: "{{ off_lights[repeat.index - 1] }}"
    - service: input_boolean.turn_on
      entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on

- alias: "Light: automatically turn off the guest bedroom"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    to: "off"
    for: "00:08:00"
  condition:
    - condition: state
      entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
      state: "on"
    - condition: state
      entity_id: light.guest_bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.automatic_guest_bedroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.guest_bedroom_lights
    data:
      transition: 10

- alias: "Light: turn off guest bedroom lights auto switch"
  mode: parallel
  trigger:
    - platform: state
      entity_id: light.guest_bedroom_lights
      to: "off"
    - platform: event
      event_type: deconz_event
      event_data:
        id: dimmer_switch_guest_bedroom
    - platform: event
      event_type: deconz_event
      event_data:
        id: smart_switch_guest_bedroom
    - platform: event
      event_type: deconz_event
      event_data:
        id: guest_bedroom_wall_switch
  condition:
    condition: state
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on

- alias: "Light: turn on automatic_guest_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_guest_bedroom_lights
    service: input_boolean.turn_on

- alias: "Light: turn off guest bedroom after 2 hours of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    from: "on"
    to: "off"
    for: "02:00:00"
  condition: "{{ is_state('light.guest_bedroom_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.guest_bedroom_lights

  #   ___        _       _     _
  #  / _ \ _   _| |_ ___(_) __| | ___
  # | | | | | | | __/ __| |/ _` |/ _ \
  # | |_| | |_| | |_\__ \ | (_| |  __/
  #  \___/ \__,_|\__|___/_|\__,_|\___|

- alias: "Light: turn on outside lights"
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: 1
    - platform: sun
      event: sunrise
      offset: "-2:00:00"
  action:
    - service: light.turn_on
      data:
        entity_id: light.outside_lights
        transition: 1

- alias: "Light: turn off outside lights"
  trigger:
    - platform: time
      at: "01:00:00"
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      above: 1
  action:
    - service: light.turn_off
      data:
        entity_id: light.outside_lights
        transition: 1

- alias: "Light: turn on the outside lights when arriving"
  trigger:
    platform: numeric_state
    entity_id: proximity.home
    below: 6
    above: 1
  condition:
    - condition: template
      value_template: "{{ state_attr('sun.sun', 'elevation') < 1 }}"
    - condition: sun
      before: sunrise
      before_offset: "-2:00:00"
    - "{{ is_state_attr('proximity.home', 'dir_of_travel', 'towards') }}"
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: "on"
  action:
    - service: light.turn_on
      data:
        entity_id: light.outside_lights
        transition: 1

#  _____      _                    _               _
# | ____|_  _| |_ _ __ __ _    ___| |__   ___  ___| | _____
# |  _| \ \/ / __| '__/ _` |  / __| '_ \ / _ \/ __| |/ / __|
# | |___ >  <| |_| | | (_| | | (__| | | |  __/ (__|   <\__ \
# |_____/_/\_\\__|_|  \__,_|  \___|_| |_|\___|\___|_|\_\___/

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_toilet
      state: "off"
    - condition: state
      entity_id: light.toilet
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.toilet

- alias: "Light: turn off bathroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bathroom
      state: "off"
    - condition: state
      entity_id: light.bathroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.bathroom_lights

- alias: "Light: turn off kitchen (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/10"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_kitchen
      state: "off"
    - condition: state
      entity_id: light.kitchen_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.kitchen_lights

- alias: "Light: turn off bedroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bedroom
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
  action:
    - service: light.turn_off
      entity_id: light.bedroom_lights
    - service: light.turn_off
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
