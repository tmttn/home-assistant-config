---
- alias: "LSX: change volume with input_select"
  trigger:
    platform: state
    entity_id: input_select.lsx_volume
  action:
    - service: timer.start
      entity_id: timer.block_kef_lsx_volume_sync
    - condition: state
      entity_id: timer.block_ha_menu_volume_sync
      state: idle
    - service_template: media_player.volume_set
      entity_id:  media_player.kef_lsx
      data_template:
        volume_level: >
          {{ trigger.to_state.state|float / 100 }}

- alias: "LSX: sync volume"
  trigger:
    platform: state
    entity_id: sensor.kef_lsx_volume
  condition:
    condition: state
    entity_id: timer.block_kef_lsx_volume_sync
    state: "idle"
  action:
    - service: timer.start
      entity_id: timer.block_ha_menu_volume_sync
    - service: input_select.select_option
      entity_id: input_select.lsx_volume
      data_template:
        option: >
          {% set volume = ((100 * states("sensor.kef_lsx_volume")|float) // 5 * 5) | int %}
          {% if volume == 100 %}{% set volume = 95 %}{% endif %}
          {{ volume }}

- alias: "LSX: set source"
  trigger:
    platform: state
    entity_id: input_select.lsx_source
  action:
    service: media_player.select_source
    entity_id: media_player.kef_lsx
    data_template:
      source: >
        {{ trigger.to_state.state }}

- alias: "LSX: sync source"
  trigger:
    platform: state
    entity_id: media_player.kef_lsx
  condition:
    condition: template
    value_template: >
      {{ trigger.from_state.attributes["source"] != trigger.to_state.attributes["source"]
         and trigger.to_state.state != "off" }}
  action:
    service: input_select.select_option
    entity_id: input_select.lsx_source
    data_template:
      option: >
        {{ trigger.to_state.attributes["source"] }}
