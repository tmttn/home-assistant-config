---
- alias: "LSX: change volume with input_booleans"
  trigger:
    - platform: state
      entity_id: input_boolean.lsx_volume_0
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_1
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_2
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_3
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_4
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_5
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_6
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_7
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_8
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_volume_9
      from: "off"
      to: "on"
  action:
    - service: input_boolean.turn_off
      data_template:
        entity_id: >
          {% set x = trigger.entity_id[-1]|int %}
          {%- for i in range(10) -%}
            {%- if x != i -%}
              input_boolean.lsx_volume_{{ i }}{%- if not loop.last %},{%- endif %}
            {%- endif -%}
          {%- endfor -%}
    - service: timer.start
      entity_id: timer.block_kef_lsx_volume_sync
    - condition: state
      entity_id: timer.block_ha_menu_volume_sync
      state: idle
    - service_template: media_player.volume_set
      entity_id:  media_player.kef_lsx
      data_template:
        volume_level: >
          {{ trigger.entity_id[-1]|float / 10 }}

- alias: "LSX: sync volume"
  trigger:
    platform: state
    entity_id: sensor.kef_lsx_volume
  condition:
    condition: state
    entity_id: timer.block_kef_lsx_volume_sync
    state: "idle"
  action:
    - service: timer.start
      entity_id: timer.block_ha_menu_volume_sync
    - service: input_boolean.turn_on
      data_template:
        entity_id: >
          {% set volume = (10 * states("sensor.kef_lsx_volume")|float) | round(0) %}
          {% if volume == 10 %}{% set volume = 9 %}{% endif %}
          input_boolean.lsx_volume_{{ volume }}

- alias: "LSX: set source"
  trigger:
    - platform: state
      entity_id: input_boolean.lsx_opt
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_wifi
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_bluetooth
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.lsx_aux
      from: "off"
      to: "on"
  action:
    - service: input_boolean.turn_off
      data_template:
        entity_id: >
          {% set x = trigger.entity_id.split("_")[-1] %}
          {%- for i in ["opt", "wifi", "bluetooth", "aux"] -%}
            {%- if x != i -%}
              input_boolean.lsx_{{ i }}{%- if not loop.last %},{%- endif %}
            {%- endif -%}
          {%- endfor -%}
    - service: media_player.select_source
      entity_id: media_player.kef_lsx
      data_template:
        source: >
          {% set source = trigger.entity_id.split("_")[-1] %}
          {{ source.capitalize() }}

- alias: "LSX: sync source"
  trigger:
    platform: state
    entity_id: media_player.kef_lsx
  condition:
    condition: template
    value_template: >
      {{ trigger.from_state.attributes["source"] != trigger.to_state.attributes["source"]
         and trigger.to_state.state != "off" }}
  action:
    service: input_boolean.turn_on
    data_template:
      entity_id: >
        input_boolean.lsx_{{ trigger.to_state.attributes["source"].lower() }}
