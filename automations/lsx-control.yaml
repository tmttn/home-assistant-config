---
#-
#  _                               _             _
# | |_____  __      ___ ___  _ __ | |_ _ __ ___ | |
# | / __\ \/ /____ / __/ _ \| '_ \| __| '__/ _ \| |
# | \__ \>  <_____| (_| (_) | | | | |_| | | (_) | |
# |_|___/_/\_\     \___\___/|_| |_|\__|_|  \___/|_|
#
#
#- from github.com/basnijholt/home-assistant-config

- alias: "LSX: sync volume"
  trigger:
    - platform: state
      entity_id: media_player.kef_lsx
    - platform: state
      entity_id: input_select.lsx_volume
  action:
    choose:
      - conditions: # KEF LSX volume changed
          condition: template
          value_template: >
            {{ (trigger.entity_id == "media_player.kef_lsx")
              and (trigger.from_state.attributes["volume_level"] != trigger.to_state.attributes["volume_level"])
              and (trigger.to_state.state != "off") }}
        sequence:
          service: input_select.select_option
          entity_id: input_select.lsx_volume
          data_template:
            option: >
              {% set volume = ((100 * state_attr("media_player.kef_lsx", "volume_level")) // 5 * 5) | int %}
              {% if volume == 100 %}{% set volume = 95 %}{% endif %}
              {{ volume }}
      - conditions: # input_select changed
          condition: template
          value_template: "{{ trigger.entity_id == 'input_select.lsx_volume' }}"
        sequence:
          service_template: media_player.volume_set
          entity_id: media_player.kef_lsx
          data_template:
            volume_level: >
              {{ trigger.to_state.state|float / 100 }}

- alias: "LSX: sync source"
  trigger:
    - platform: state
      entity_id: media_player.kef_lsx
    - platform: state
      entity_id: input_select.lsx_source
  action:
    choose:
      - conditions: # KEF LSX source changed
          condition: template
          value_template: >
            {{ (trigger.entity_id == "media_player.kef_lsx")
               and (trigger.from_state.attributes["source"] != trigger.to_state.attributes["source"])
               and (trigger.to_state.state != "off") }}
        sequence:
          service: input_select.select_option
          entity_id: input_select.lsx_source
          data_template:
            option: >
              {{ trigger.to_state.attributes["source"] }}
      - conditions: # input_select changed
          condition: template
          value_template: "{{ trigger.entity_id == 'input_select.lsx_source' }}"
        sequence:
          service: media_player.select_source
          entity_id: media_player.kef_lsx
          data_template:
            source: >
              {{ trigger.to_state.state }}
