---
#-
#                    _                      _       _
#   __ _ _ __  _ __ | | ___  __      ____ _| |_ ___| |__
#  / _` | '_ \| '_ \| |/ _ \ \ \ /\ / / _` | __/ __| '_ \
# | (_| | |_) | |_) | |  __/  \ V  V / (_| | || (__| | | |
#  \__,_| .__/| .__/|_|\___|___\_/\_/ \__,_|\__\___|_| |_|
#       |_|   |_|         |_____|
#
#- from github.com/tmttn/home-assistant-config

- alias: "Apple Watch: minimal lights bedroom"
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Minimal lights bedroom
  action:
    service: light.turn_on
    data:
      entity_id:
        - light.bed_led
      brightness: 1
      color_name: red

- alias: "Apple Watch: set sleep mode"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set sleep mode
  action:
    - variables:
        iphone: "notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-', '_') }}"
    - service: "{{ iphone }}"
      data:
        message: "Apple Watch: set sleep mode."
        data:
          push:
            category: SET_SLEEP_MODE
    - wait_for_trigger:
        platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: SET_SLEEP_MODE
      timeout: "00:00:20"
      continue_on_timeout: false
    - variables:
        event: "{{ wait.trigger.event.data.actionName.lower() }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.sleep_mode
        option: "{{ event }}"

- alias: "Apple Watch: set lights"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set lights
  action:
    - variables:
        iphone: "notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-', '_') }}"
    - service: "{{ iphone }}"
      data:
        message: "Apple Watch: set lights"
        data:
          push:
            category: SET_LIGHTS
    - wait_for_trigger:
        platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: SET_LIGHTS
      timeout: "00:00:20"
      continue_on_timeout: false
    - variables:
        light: >
          {{
            {'ALL': 'all',
             'BEDROOM': 'light.bedroom_lights',
             'LIVING_ROOM': 'light.living_room_lights',
             'BATHROOM': 'light.bathroom_lights',
             'TOILET': 'light.toilet',
             'KITCHEN': 'light.kitchen_lights',
            }[wait.trigger.event.data.actionName] }}
    - service: "{{ iphone }}"
      data:
        message: "Apple Watch: choose option"
        data:
          push:
            category: LIGHT_OPTIONS
    - wait_for_trigger:
        platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: LIGHT_OPTIONS
      timeout: "00:00:20"
      continue_on_timeout: false
    - variables:
        option: "{{ wait.trigger.event.data.actionName }}"
    - choose:
        - conditions: "{{ option == 'OFF' }}"
          sequence:
            service: light.turn_off
            data:
              entity_id: "{{ light }}"
        - conditions: "{{ option == 'ON' }}"
          sequence:
            service: script.turn_on_lights
            data:
              entity_id: "{{ light }}"
        - conditions: "{{ option == 'FIFTY' }}"
          sequence:
            service: light.turn_on
            data:
              entity_id: "{{ light }}"
              brightness_pct: 50
        - conditions: "{{ option == 'HUNDRED' }}"
          sequence:
            service: light.turn_on
            data:
              entity_id: "{{ light }}"
              brightness_pct: 100
        - conditions: "{{ option == 'ONE' }}"
          sequence:
            service: light.turn_on
            data:
              entity_id: "{{ light }}"
              brightness_pct: 1
        - conditions: "{{ option == 'WHITE' and light == 'light.living_room_lights'}}"
          sequence:
            service: script.white_lights_living_room
        - conditions: "{{ option == 'WHITE' and light == 'light.bedroom_lights'}}"
          sequence:
            service: script.white_lights_living_room
        - conditions: "{{ option == 'COZY' and light == 'light.living_room_lights'}}"
          sequence:
            service: script.cozy_lights_living_room
        - conditions: "{{ option == 'COZY' and light == 'light.bedroom_lights'}}"
          sequence:
            service: script.cozy_lights_bedroom

- alias: "Apple Watch: temperature report"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Temperature report
  action:
    - variables:
        iphone: "notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-', '_') }}"
    - service: "{{ iphone }}"
      data:
        title: "Temperature"
        message: >
          Living room: {{ states('sensor.temperature_living_room') }}°C
          Bathroom: {{ states('sensor.temperature_bathroom') }}°C
          Bedroom: {{ states('sensor.temperature_bedroom') }}°C
          Kitchen: {{ states('sensor.temperature_kitchen') }}°C
          Storage: {{ states('sensor.temperature_storage') }}°C
          Bedroom Marthe: {{ states('sensor.temperature_bedroom_marthe') }}°C
          Outside: {{ state_attr('weather.buienradar', 'temperature') }}°C and it's {{ states('weather.buienradar') }}

- alias: "Apple Watch: send vacuum cleaner"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Vacuum
  action:
    - variables:
        iphone: "notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-', '_') }}"
    - service: "{{ iphone }}"
      data:
        message: "Apple Watch: vacuum"
        data:
          push:
            category: VACUUM_LOCATIONS
    - wait_for_trigger:
        platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: VACUUM_LOCATIONS
      timeout: "00:00:20"
      continue_on_timeout: false
    - variables:
        location: "{{ wait.trigger.event.data.actionName.lower() }}"
    - service: script.vacuum_command
      data:
        option: "{{ location }}"

- alias: "Apple Watch: movie time"
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Movie time
  action:
    - service: light.turn_on
      data:
        entity_id:
          - light.tv_led
        brightness: 5
        color_name: red
    - service: light.turn_on
      data:
        entity_id:
          - light.hue_plug
        brightness: 5

- alias: "Apple Watch: reset adaptive lighting"
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Reset adaptive lighting
  action:
    service: script.reset_adaptive_lighting

- alias: "Apple Watch: set temperature"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set temperature
  action:
    - variables:
        iphone: "notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-', '_') }}"
    - service: "{{ iphone }}"
      data:
        message: "Apple Watch: set temperature"
        data:
          push:
            category: SET_TEMPERATURE
    - wait_for_trigger:
        platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: SET_TEMPERATURE
      timeout: "00:00:20"
      continue_on_timeout: false
    - variables:
        temperature: "{{ wait.trigger.event.data.actionName.split('T')[1] | int }}"
    - service: climate.set_temperature
      data:
        entity_id: climate.thermostat
        temperature: "{{ temperature }}"

- alias: "Apple Watch: where is other person?"
  mode: parallel
  trigger:
    platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Where is
  variables:
    phone: >
      {% if trigger.event.data.sourceDeviceName == 'Bizzyphone' %}
        bizzyphone
      {% else %}
        t_phone
      {% endif %}
    other_person: "{% if phone == 'bizzyphone' %}tanja{% else %}tom{% endif %}"
    device_tracker: "device_tracker.{{ other_person }}_iphone"
  action:
    service: "notify.mobile_app_{{ phone }}"
    data:
      message: "{{ other_person }} is {{ distance('device_tracker.tom_iphone', 'device_tracker.tanja_iphone') | round(2) }} km away"
      data:
        push:
          category: MAP
        action_data:
          latitude: "{{ state_attr(device_tracker, 'latitude') }}"
          longitude: "{{ state_attr(device_tracker, 'longitude') }}"
