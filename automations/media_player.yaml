---
#-
#                     _ _                  _
#  _ __ ___   ___  __| (_) __ _      _ __ | | __ _ _   _  ___ _ __
# | '_ ` _ \ / _ \/ _` | |/ _` |    | '_ \| |/ _` | | | |/ _ \ '__|
# | | | | | |  __/ (_| | | (_| |    | |_) | | (_| | |_| |  __/ |
# |_| |_| |_|\___|\__,_|_|\__,_|____| .__/|_|\__,_|\__, |\___|_|
#                             |_____|_|            |___/
#
#- from github.com/basnijholt/home-assistant-config

- alias: "Media player: turn on Opt when TV is on and Spotify is not playing and not Usb"
  trigger:
    - platform: state
      entity_id: media_player.tv
    - platform: state
      entity_id: media_player.spotify
      to: paused
  condition:
    - condition: state
      entity_id: media_player.tv
      state: "on"
    - condition: template
      value_template: >
        {{ not is_state_attr("media_player.kef_ls50", "source", "Opt") }}
    - condition: template
      value_template: >
        {{ not (is_state_attr("media_player.kef_ls50", "source", "Usb")
                and is_state_attr("media_player.tv", "source", "HDMI 3")) }}
    - condition: template
      value_template: >
        {{ not (is_state_attr("media_player.spotify", "source", "LS50 Wireless")
                and is_state("media_player.spotify", "playing")) }}
    - condition: template
      value_template: >
        {{ not is_state_attr("media_player.tv", "source", "GALLERY") }}
  action:
    service: media_player.select_source
    entity_id: media_player.kef_ls50
    data:
      source: Opt

- alias: "Media player: turn off speakers when turning off TV"
  trigger:
    platform: state
    entity_id: media_player.tv
    to: "off"
  condition:
    condition: state
    entity_id: media_player.kef_ls50
    state: "on"
  action:
    - service: homeassistant.update_entity
      entity_id: media_player.kef_ls50
    - condition: template
      value_template: >
        {{ is_state_attr("media_player.kef_ls50", "source", "Opt") }}
    - service: media_player.turn_off
      entity_id: media_player.kef_ls50

- alias: "Media player: if speakers off and TV on, turn on the speaker on TV state change"
  trigger:
    platform: state
    entity_id: media_player.tv
  condition: # Happens e.g., when speakers auto-shutdown and the TV is on but idle
    - condition: state
      entity_id: media_player.kef_ls50
      state: "off"
    - condition: state
      entity_id: media_player.tv
      state: "on"
  action:
    - service: media_player.turn_on
      entity_id: media_player.kef_ls50
    - service: media_player.select_source
      entity_id: media_player.kef_ls50
      data:
        source: Opt

- alias: "Media player: update Spotify entity when TV is on every 5 seconds"
  trigger:
    platform: time_pattern
    seconds: 5
  condition:
    - condition: state
      entity_id: media_player.spotify
      state: playing
    - condition: state
      entity_id: media_player.tv
      state: "on"
  action:
    service: homeassistant.update_entity
    entity_id: media_player.spotify

- alias: "Media player: sync KEF LS50 and TV volume"
  trigger:
    - platform: state
      entity_id: media_player.kef_ls50
    - platform: state
      entity_id: media_player.tv
  condition:
    condition: template
    value_template: >
      {{ trigger.from_state.attributes["volume_level"] != trigger.to_state.attributes["volume_level"]
         and trigger.to_state.state != "off"
         and state_attr("media_player.kef_ls50", "source") in ("Opt", "Usb") }}
  action:
    repeat:
      sequence:
        - service_template: media_player.volume_set
          data_template:
            entity_id: >
              media_player.{{ "tv" if (trigger.entity_id == "media_player.kef_ls50") else "kef_ls50" }}
            volume_level: >
              {{ state_attr(trigger.entity_id, "volume_level") }}
        - delay:
            milliseconds: 200
      until:
        condition: template
        value_template: >
          {{ state_attr("media_player.tv", "volume_level") == state_attr("media_player.kef_ls50", "volume_level")
             or not (is_state("media_player.tv", "on") and is_state("media_player.kef_ls50", "on")) }}
