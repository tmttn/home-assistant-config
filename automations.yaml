#-
#              _                        _   _
#   __ _ _   _| |_ ___  _ __ ___   __ _| |_(_) ___  _ __  ___
#  / _` | | | | __/ _ \| '_ ` _ \ / _` | __| |/ _ \| '_ \/ __|
# | (_| | |_| | || (_) | | | | | | (_| | |_| | (_) | | | \__ \
#  \__,_|\__,_|\__\___/|_| |_| |_|\__,_|\__|_|\___/|_| |_|___/
#
#
#- from github.com/tmttn/home-assistant-config
- id: '1636727868357'
  alias: 'Vacuum: disable vacuum camera update when docked'
  description: ''
  use_blueprint:
    path: PiotrMachowski/disable_vacuum_camera_update_when_docked.yaml
    input:
      vacuum: vacuum.robot_vacuum
      camera: camera.xiaomi_cloud_map_extractor
- id: '1667822050564'
  alias: 'Adaptive lighting: notify manual_control'
  description: ''
  trigger:
  - platform: event
    event_type: adaptive_lighting.manual_control
  condition: []
  action:
  - service: system_log.write
    data:
      message: '{{ light }} is manually controlled'
      level: error
      logger: yolo.yolo
  - service: notify.mobile_app_bizzyphone
    data:
      title: 'Adaptive Ligthing: manual_control'
      message: '{{ light }} is now ''manually controlled'', context={{ trigger.event.context
        }}'
  mode: parallel
  max: 20
  variables:
    light: '{{ trigger.event.data.entity_id }}'
- id: '1667822131571'
  alias: 'Adaptive lighting: reset manual_control after 1 hour'
  description: ''
  trigger:
  - platform: event
    event_type: adaptive_lighting.manual_control
  condition:
  - '{{ ''hall'' not in light and ''stairs'' not in light }}'
  action:
  - delay: 01:00:00
  - condition: template
    value_template: '{{ light in state_attr(''switch'', ''manual_control'') }}'
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: '{{ switch }}'
      lights: '{{ light }}'
      manual_control: false
  - service: notify.mobile_app_bizzyphone
    data:
      title: 'Adaptive Ligthing: manual_control reset'
      message: '{{ light }} is reset to not ''manually controlled'''
  mode: parallel
  max: 200
  variables:
    light: '{{ trigger.event.data.entity_id }}'
    switch: '{{ trigger.event.data.switch }}'
- id: '1667822350382'
  alias: 'Adaptive lighting: turn on and off switches'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
  - platform: homeassistant
    event: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.sleep_mode
        state: 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_half_and_dim
          - switch.adaptive_lighting_half_and_full
          - switch.adaptive_lighting_sleep_mode_default
          - switch.adaptive_lighting_sleep_mode_living_room
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.adaptive_lighting_default
    - conditions:
      - condition: state
        entity_id: input_select.sleep_mode
        state: half
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_default
          - switch.adaptive_lighting_sleep_mode_half_and_full
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_half_and_dim
          - switch.adaptive_lighting_half_and_full
          - switch.adaptive_lighting_sleep_mode_half_and_dim
    - conditions:
      - condition: state
        entity_id: input_select.sleep_mode
        state: total
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_half_and_dim
          - switch.adaptive_lighting_half_and_full
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_default
          - switch.adaptive_lighting_sleep_mode_default
  mode: single
  variables:
    sleep_mode: '{{ states(''input_select.sleep_mode'') }}'
- id: '1667822399597'
  alias: 'Alarm clock: wake up with light'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time")[0:5] == states("sensor.ten_minutes_before_alarm")
      }}

      '
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.alarm_clock
  - service: input_boolean.turn_on
    entity_id: input_boolean.wake_up_light
  - service: input_select.select_option
    entity_id: input_select.sleep_mode
    data:
      option: 'off'
  mode: single
- id: '1667822429438'
  alias: 'Candy: Marthe candy button pressed'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a10043a4a270fac7f21e2970d8f74af9
    type: action
    subtype: single
    discovery_id: 0x00158d0007c58a07 action_single
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: time
        weekday:
        - tue
        - thu
        - sat
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Het is vandaag geen snoepdag. Je mag vandaag geen snoepjes.
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'on'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Stop! Jij hebt al een snoepje gekregen. Geen snoepjes meer vandaag,
            anders krijg je rotte tandjes.
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'off'
      - condition: time
        before: '10:00:00'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Nu al een snoepje, nee dat is veel te vroeg hoor. Moet jij niet
            eerst ontbijten?
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja hoor, neem maar een snoepje Marthe. Lekker!
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.marthe_candy
  mode: single
- id: '1667822442780'
  alias: 'Candy: reset input_boolean Marthe candy at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.marthe_candy
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.marthe_candy
  mode: single
- id: '1667822469555'
  alias: 'Doorbell: the doorbell has been pressed'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_ding
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data:
      flash: short
      entity_id:
      - light.living_room_lights
      - light.kitchen_lights
  - service: notify.all_iphones
    data:
      title: Doorbell
      message: Someone in front of the door!
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      language: nl
      message: Er is iemand aan de voordeur.
  mode: single
- id: '1667822507159'
  alias: 'Music: start playlist'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.start_the_music
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.start_the_music
  - service: script.start_spotify_playlist_of_nearest_person
    data:
      source: Google Home
      entity_id: media_player.google_home
  mode: single
  initial_state: true
- id: '1667822516904'
  alias: 'Music: switch music from iPhone to speakers if coming home'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_back_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.tanja
    state: not_home
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  - '{{ is_state_attr(''media_player.spotify'', ''source'', ''bizzyphone'') }}'
  - '{{ is_state(''media_player.spotify'', ''playing'') }}'
  - '{{ as_timestamp(now()) - as_timestamp(states.person.tom.last_changed) < 5 * 60}}'
  - condition: numeric_state
    entity_id: proximity.home
    below: 2
  action:
  - service: spotcast.start
    data:
      entity_id: media_player.google_home
      force_playback: false
  mode: single
- id: '1667822568415'
  alias: 'Plant: problem with Peperomia Glabella'
  description: ''
  trigger:
  - platform: state
    entity_id: plant.peperomia_glabella
    to: problem
  - platform: time
    at: '20:00'
  condition:
  - condition: state
    entity_id: plant.peperomia_glabella
    state: problem
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - '{{ state_attr(''plant.peperomia_glabella'', ''moisture'') | int(default=-1) >=
    0}}'
  action:
  - service: notify.all_iphones
    data:
      title: Plant in trouble! ⚠️☢️☠️
      message: "You need to give the Peperomia Glabella \U0001F33A attention and love:
        {{ state_attr(\"plant.peperomia_glabella\", \"problem\") }}!\n"
  mode: single
- id: '1667822595280'
  alias: 'Work: go home notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.worked_enough_today
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.work_hour_notification_sent
    state: 'off'
  action:
  - service: notify.mobile_app_bizzyphone
    data:
      title: Work
      message: "You have worked 8 hours today, very good! Go home \U0001F389"
  - service: input_boolean.turn_on
    entity_id: input_boolean.work_hour_notification_sent
  mode: single
- id: '1667822602824'
  alias: 'Work: reset input_boolean at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.work_hour_notification_sent
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.work_hour_notification_sent
  mode: single
- id: '1667822612254'
  alias: 'Work: Tom left work notification for Tanja'
  description: ''
  trigger:
  - platform: state
    entity_id: person.tom
    from: Work
  condition:
  - condition: time
    after: '15:00:00'
    before: '22:00:00'
  action:
  - service: notify.mobile_app_t_phone
    data:
      title: Work
      message: "Tom has left work! ♥️\U0001F389"
  mode: single
- id: '1667822923688'
  alias: 'Lovelace: convert lovelace.json to lovelace-ui.yaml'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.lovelace_size
  condition: []
  action:
  - service: shell_command.convert_lovelace
    data: {}
  - service: shell_command.chores
    data: {}
  mode: single
  initial_state: true
- id: '1667822959782'
  alias: 'Vacation mode: auto turn off'
  description: ''
  trigger:
  - platform: state
    entity_id: group.persons
    from: not_home
    to: home
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.vacation_mode
  - service: notify.all_iphones
    data:
      title: Vacation mode
      message: Welcome back! Switching off the vacation mode.
  mode: single
  initial_state: true
- id: '1667822970472'
  alias: 'Vacation mode: auto turn on'
  description: ''
  trigger:
  - platform: state
    entity_id: group.persons
    from: home
    to: not_home
    for: '24:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.vacation_mode
  - service: notify.all_iphones
    data:
      title: Vacation mode
      message: No one at home for 24 hours, switching on vacation mode.
  mode: single
  initial_state: true
- id: '1667823588355'
  alias: 'Apple Watch: minimal lights bedroom'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Minimal lights bedroom
  condition: []
  action:
  - service: light.turn_on
    data:
      entity_id:
      - light.bed_led
      brightness: 1
      color_name: red
  mode: single
- id: '1667823597022'
  alias: 'Apple Watch: movie time'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Movie time
  condition: []
  action:
  - service: light.turn_on
    data:
      entity_id:
      - light.tv_led
      brightness: 5
      color_name: red
  - service: light.turn_on
    data:
      entity_id:
      - light.hue_plug
      brightness: 5
  mode: single
- id: '1667823607781'
  alias: 'Apple Watch: reset adaptive lighting'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Reset adaptive lighting
  condition: []
  action:
  - service: script.reset_adaptive_lighting
    data: {}
  mode: single
- id: '1667823630963'
  alias: 'Apple Watch: send vacuum cleaner'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Vacuum
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-','_')
        }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: vacuum'
      data:
        actions:
        - action: VACUUM_LIVING_ROOM
          title: Living room
        - action: VACUUM_BEDROOM
          title: Bedroom
        - action: VACUUM_OFFICE
          title: Office
        - action: VACUUM_HALL
          title: Hall
        - action: VACUUM_KITCHEN
          title: Kitchen
        - action: VACUUM_ALL
          title: All
        - action: VACUUM_STOP
          title: Stop and return
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_LIVING_ROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_BEDROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_OFFICE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_HALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_KITCHEN
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_ALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_STOP
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      location: '{{ wait.trigger.event.data.action.lower().split(''vacuum_'')[1] }}'
  - service: script.vacuum_command
    data:
      option: '{{ location }}'
  mode: parallel
- id: '1667823645606'
  alias: 'Apple Watch: set lights'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set lights
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-','_')
        }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set lights'
      data:
        actions:
        - action: SET_LIGHTS_ALL
          title: All
        - action: SET_LIGHTS_BEDROOM
          title: Bedroom
        - action: SET_LIGHTS_LIVING_ROOM
          title: Living room
        - action: SET_LIGHTS_BATHROOM
          title: Bathroom
        - action: SET_LIGHTS_HALL_AND_STAIRS
          title: Hall and stairs
        - action: SET_LIGHTS_TOILET
          title: Toilet
        - action: SET_LIGHTS_KITCHEN
          title: Kitchen
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_ALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_BEDROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_LIVING_ROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_BATHROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_HALL_AND_STAIRS
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_TOILET
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_KITCHEN
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      light: "{{\n  {'SET_LIGHTS_ALL': 'all',\n   'SET_LIGHTS_BEDROOM': 'light.bedroom_lights',\n
        \  'SET_LIGHTS_LIVING_ROOM': 'light.living_room_lights',\n   'SET_LIGHTS_BATHROOM':
        'light.ceiling_bathroom',\n   'SET_LIGHTS_TOILET': 'light.toilet',\n   'SET_LIGHTS_KITCHEN':
        'light.kitchen_lights',\n  }[wait.trigger.event.data.action] }}\n"
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: choose option'
      data:
        actions:
        - action: LIGHTS_OFF
          title: 'Off'
        - action: LIGHTS_ON
          title: 'On'
        - action: LIGHTS_FIFTY
          title: 50%
        - action: LIGHTS_HUNDRED
          title: 100%
        - action: LIGHTS_ONE
          title: 1%
        - action: LIGHTS_WHITE
          title: White lights
        - action: LIGHTS_COZY
          title: Cozy lights
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_OFF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_ON
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_FIFTY
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_HUNDRED
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_ONE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_WHITE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_COZY
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      option: '{{ wait.trigger.event.data.action }}'
  - choose:
    - conditions: '{{ option == ''LIGHTS_OFF'' }}'
      sequence:
        service: light.turn_off
        data:
          entity_id: '{{ light }}'
    - conditions: '{{ option == ''LIGHTS_ON'' }}'
      sequence:
        service: script.turn_on_lights
        data:
          entity_id: '{{ light }}'
    - conditions: '{{ option == ''LIGHTS_FIFTY'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 50
    - conditions: '{{ option == ''LIGHTS_HUNDRED'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 100
    - conditions: '{{ option == ''LIGHTS_ONE'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 1
    - conditions: '{{ option == ''LIGHTS_WHITE'' and light == ''light.living_room_lights''}}'
      sequence:
        service: script.white_lights_living_room
        data: {}
    - conditions: '{{ option == ''LIGHTS_WHITE'' and light == ''light.bedroom_lights''}}'
      sequence:
        service: script.white_lights_bedroom
        data: {}
    - conditions: '{{ option == ''LIGHTS_COZY'' and light == ''light.living_room_lights''}}'
      sequence:
        service: script.cozy_lights_living_room
        data: {}
    - conditions: '{{ option == ''LIGHTS_COZY'' and light == ''light.bedroom_lights''}}'
      sequence:
        service: script.cozy_lights_bedroom
        data: {}
  mode: parallel
- id: '1667823657172'
  alias: 'Apple Watch: set sleep mode'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set sleep mode
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-','_')
        }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set sleep mode.'
      data:
        actions:
        - action: SLEEP_OFF
          title: 'Off'
        - action: SLEEP_HALF
          title: Half
        - action: SLEEP_TOTAL
          title: Total
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_OFF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_HALF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_TOTAL
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      event: '{{ wait.trigger.event.data.action.lower().split(''_'')[1] }}'
  - service: input_select.select_option
    data:
      entity_id: input_select.sleep_mode
      option: '{{ event }}'
  mode: parallel
- id: '1667823665764'
  alias: 'Apple Watch: set temperature'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set temperature
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-','_')
        }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set temperature'
      data:
        actions:
        - action: T15
          title: '15'
        - action: T16
          title: '16'
        - action: T17
          title: '17'
        - action: T18
          title: '18'
        - action: T19
          title: '19'
        - action: T20
          title: '20'
        - action: T21
          title: '21'
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T15
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T16
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T17
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T18
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T19
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T20
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T21
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      temperature: '{{ wait.trigger.event.data.action.split(''T'')[1] | int }}'
  - service: climate.set_temperature
    data:
      entity_id: climate.thermostat
      temperature: '{{ temperature }}'
  mode: parallel
- id: '1667823676604'
  alias: 'Apple Watch: temperature report'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Temperature report
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-','_')
        }}
  - service: '{{ iphone }}'
    data:
      title: Temperature
      message: 'Living room: {{ states(''sensor.temperature_living_room'') }}°C Bathroom:
        {{ states(''sensor.temperature_bathroom'') }}°C Bedroom: {{ states(''sensor.temperature_bedroom'')
        }}°C Kitchen: {{ states(''sensor.temperature_kitchen'') }}°C Storage: {{ states(''sensor.temperature_storage'')
        }}°C Bedroom Marthe: {{ states(''sensor.temperature_bedroom_marthe'') }}°C
        Outside: {{ state_attr(''weather.buienradar'', ''temperature'') }}°C and it''s
        {{ states(''weather.buienradar'') }}

        '
  mode: parallel
- id: '1667823685422'
  alias: 'Apple Watch: where is other person?'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Where is
  condition: []
  action:
  - service: notify.mobile_app_{{ phone }}
    data:
      message: '{{ other_person }} is {{ distance(''device_tracker.tom_iphone'', ''device_tracker.tanja_iphone'')
        | round(2) }} km away'
      data:
        push:
          category: MAP
        action_data:
          latitude: '{{ state_attr(device_tracker, ''latitude'') }}'
          longitude: '{{ state_attr(device_tracker, ''longitude'') }}'
  mode: parallel
  variables:
    phone: "{% if trigger.event.data.sourceDeviceName == 'Bizzyphone' %}\n  bizzyphone\n{%
      else %}\n  t_phone\n{% endif %}\n"
    other_person: '{% if phone == ''bizzyphone'' %}Tanja{% else %}Tom{% endif %}'
    device_tracker: device_tracker.{{ other_person }}_iphone
- id: '1667823770989'
  alias: 'Medication: Marthe vitamin button pressed'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3f61695ca7fe49821e99fccf111bd034
    type: action
    subtype: single
    discovery_id: 0x00158d0007c587f1 action_single
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_vitamins
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja, Marthe haar vitamines geven en ik heb genoteerd dat ze ze gekregen
            heeft.
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.marthe_vitamins
    default:
    - service: tts.google_translate_say
      data:
        entity_id: media_player.kitchen_display
        language: nl
        message: Stop! Marthe heeft haar vitamines al gekregen vandaag.
  mode: single
- id: '1667823778822'
  alias: 'Medication: Marthe vitamin reminder'
  description: ''
  trigger:
  - platform: time
    at: '17:10:00'
  condition:
  - condition: state
    entity_id: input_boolean.marthe_vitamins
    state: 'off'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - service: tts.google_translate_say
    data:
      entity_id: media_player.kitchen_display
      language: nl
      message: Dit is een vriendelijke herinnering dat Marthe haar vitaminen vandaag
        nog niet heeft gekregen.
  - service: notify.all_iphones
    data:
      title: Vitamines Marthe
      message: "Medicatie: Marthe moet haar vitamines nog krijgen. \U0001F48A\U0001F9F8"
  mode: single
- id: '1667823788838'
  alias: 'Medication: reset input_boolean Marthe vitamins at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.marthe_vitamins
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.marthe_vitamins
  mode: single
- id: '1667823799424'
  alias: 'Medication: reset input_boolean Tom medication at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.tom_medication
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.tom_medication
  mode: single
- id: '1667823809138'
  alias: 'Medication: Tom medication button pressed'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3f61695ca7fe49821e99fccf111bd034
    type: action
    subtype: double
    discovery_id: 0x00158d0007c587f1 action_double
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.tom_medication
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja, medicatie nemen en ik heb genoteerd dat je ze genomen hebt.
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.tom_medication
    default:
    - service: tts.google_translate_say
      data:
        entity_id: media_player.kitchen_display
        language: nl
        message: Stop! Je hebt je medicatie al genomen vandaag.
  mode: single
- id: '1667823818714'
  alias: 'Medication: Tom medication reminder'
  description: ''
  trigger:
  - platform: time
    at: '12:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.tom_medication
    state: 'off'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - service: tts.google_translate_say
    data:
      entity_id: media_player.kitchen_display
      language: nl
      message: Dit is een vriendelijke herinnering dat Tom zijn medicatie vandaag
        nog niet heeft genomen.
  - service: notify.mobile_app_bizzyphone
    data:
      title: Medicatie
      message: "Medicatie: je moet je medicatie nog nemen. \U0001F48A"
  mode: single
- id: '1667823874332'
  alias: 'Solar: grid export too high'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.p1_meter_active_power
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: '-700'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - '{{is_state(''person.tom'', ''home'') or is_state(''person.tanja'', ''home'')}}'
  action:
  - service: '{{ states(''sensor.nearest_iphone_notify'') }}'
    data:
      title: Energy
      message: Grid export is above 0.7kWh, please increase self-consumption. ⚡
  - delay: 00:30:00
  mode: single
- id: '1667823903150'
  alias: 'Leaving: ask to turn off everything'
  description: ''
  trigger:
  - platform: state
    entity_id: person.tom
    from: home
  - platform: state
    entity_id: person.tanja
    from: home
  condition:
  - condition: state
    entity_id:
    - binary_sensor.no_one_home
    - binary_sensor.anything_on
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - delay: 00:05:00
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - service: notify.all_iphones
    data:
      message: No one is home, turn off everything?
      data:
        actions:
        - action: TURN_OFF_EVERYTHING
          title: Turn off everything
          activationMode: background
          authenticationRequired: false
          destructive: true
  mode: single
  initial_state: true
- id: '1667823910453'
  alias: 'Leaving: automatically turn off everything'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.someone_in_the_house_in_last_hour
    from: 'on'
    to: 'off'
    for: 00:01:00
  - platform: time_pattern
    hours: /1
  condition:
  - condition: state
    entity_id:
    - binary_sensor.no_one_home
    - binary_sensor.anything_on
    state: 'on'
  - condition: state
    entity_id:
    - binary_sensor.someone_in_the_house_in_last_hour
    - input_boolean.guest_mode
    state: 'off'
  - '{{ not is_state_attr(''proximity.home'', ''dir_of_travel'', ''towards'') }}'
  action:
  - service: script.leaving
    data: {}
  - service: notify.all_iphones
    data:
      title: Leaving
      message: Everything automatically turned off!
  mode: single
  initial_state: true
- id: '1667823919568'
  alias: 'Leaving: turn off everything after notification'
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: TURN_OFF_EVERYTHING
  condition: []
  action:
  - service: script.leaving
    data: {}
  mode: single
- id: '1667824051618'
  alias: 'Vacuum: air filter needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_filter_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Air filter needs replacing!
  mode: single
- id: '1667824120011'
  alias: 'Vacuum: bin is full'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.vacuum_bin_counter
  condition:
  - '{{ states(''counter.vacuum_bin_counter'')|int % 3 == 0}}'
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Vacuum dust bin is full, please empty it!
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      language: nl
      message: Het stofbakje van Brenda is vol. Maak het stofbakje leeg alstublieft.
  mode: single
- id: '1667824128611'
  alias: 'Vacuum: cleanup if nobody is home'
  description: ''
  trigger:
  - platform: state
    entity_id: group.persons
    from: home
    to: not_home
  condition:
  - condition: time
    after: 07:00:00
    before: '22:00:00'
  - condition: state
    entity_id: binary_sensor.vacuum_day
    state: 'on'
  - condition: state
    entity_id: group.persons
    state: not_home
  - condition: state
    entity_id: input_boolean.cleaned_today
    state: 'off'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: vacuum.start
    entity_id: vacuum.robot_vacuum
  mode: single
- id: '1667824148003'
  alias: 'Vacuum: main brush needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_main_brush_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Main brush needs replacing!
  mode: single
- id: '1667824157237'
  alias: 'Vacuum: reminder notification'
  description: ''
  trigger:
  - platform: time
    at: 07:00
  condition:
  - condition: state
    entity_id: binary_sensor.vacuum_day
    state: 'on'
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Vacuum will go today, make sure to leave the doors open and leave nothing
        on the floor!
  mode: single
- id: '1667824166657'
  alias: 'Vacuum: reset cleaned today'
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.cleaned_today
  mode: single
  initial_state: true
- id: '1667824176380'
  alias: 'Vacuum: reset to standard mode'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.living_room
    to: docked
  condition: []
  action:
  - service: vacuum.set_fan_speed
    entity_id: vacuum.robot_vacuum
    data:
      fan_speed: Standard
  mode: single
- id: '1667824188262'
  alias: 'Vacuum: sensors need cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_sensor_dirty_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Sensors need cleaning!
  mode: single
- id: '1667824196846'
  alias: 'Vacuum: side brush needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_side_brush_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Side brush needs replacing!
  mode: single
- id: '1667824204802'
  alias: 'Vacuum: started cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: docked
    to: cleaning
  condition: []
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Robot started to clean!
  mode: single
- id: '1667824214178'
  alias: 'Vacuum: stopped cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition: []
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Cleanup successful after {{ (states('sensor.robot_vacuum_last_clean_duration')|int
        / 60)|round }} minutes.
  - service: input_boolean.turn_on
    entity_id: input_boolean.cleaned_today
  - service: counter.increment
    entity_id: counter.vacuum_bin_counter
  mode: single
- id: '1667824228103'
  alias: 'Vacuum: water reservoir empty'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.robot_vacuum_water_shortage
    to: 'on'
  - platform: state
    entity_id: vacuum.robot_vacuum
    to: cleaning
  condition:
  - condition: state
    entity_id: binary_sensor.robot_vacuum_water_shortage
    state: 'on'
  - condition: not
    conditions:
    - condition: state
      entity_id: vacuum.robot_vacuum
      state: docked
  action:
  - service: vacuum.pause
    entity_id: vacuum.robot_vacuum
  - service: notify.all_iphones
    data:
      title: Robot
      message: "Water reservoir is empty, please fill it! \U0001F6B0"
      data:
        actions:
        - action: RESUME_CLEANING
          title: Resume cleaning
          activationMode: background
          authenticationRequired: true
          destructive: true
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      language: nl
      message: Het water reservoir van Brenda is leeg. Vul het water reservoir alstublieft.
  - wait_for_trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: RESUME_CLEANING
    timeout: 00:05:00
    continue_on_timeout: false
  - service: vacuum.start
    entity_id: vacuum.robot_vacuum
  mode: single
- id: '1667824265314'
  alias: 'System: battery level low'
  description: ''
  trigger:
  - platform: time
    at: '14:30:00'
  condition: []
  action:
  - variables:
      battery_ids: "{% set ns = namespace(battery=[]) %} {% for s in states.sensor
        if 'battery_level' in s.entity_id %}\n  {% set ns.battery = ns.battery + [s]
        %}\n{% endfor %} {{ ns.battery | map(attribute='entity_id') | list }}\n"
  - alias: Repeat
    repeat:
      count: '{{ battery_ids | length }}'
      sequence:
      - variables:
          current: '{{ battery_ids[repeat.index - 1] }}'
      - condition: template
        value_template: '{{ ''iphone'' not in current and ''ipad'' not in current
          }}'
      - condition: template
        value_template: '{{ 0 < (states(current) | float(default=0)) < (min_battery_level
          | float(default=50) ) }}'
      - service: '{{ notify_service }}'
        data:
          title: System
          message: 'Battery level low of {{ current }}: {{ states(current) }}%! ⚠️'
  mode: single
  variables:
    min_battery_level: 50
    notify_service: notify.mobile_app_bizzyphone
    battery_ids: ''
    current: ''
- id: '1667824272728'
  alias: 'System: run chores'
  description: Run shell and Python scripts in utils folder.
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - service: shell_command.chores
    data: {}
  mode: single
- id: '1667824280190'
  alias: 'System: update DNS'
  description: Update the DNS at Gandi to point my domain to my Home Assistant instance.
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - service: script.update_dns
    data: {}
  mode: single
- id: '1667824287046'
  alias: 'System: warning about high CPU usage'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.processor_use
    above: 70
    for:
      hours: 4
  condition: []
  action:
  - service: notify.mobile_app_bizzyphone
    data:
      title: System
      message: "CPU usage has been above 70% for 4 hours! ⚠️\U0001F5A5"
  mode: single
- id: '1667824315370'
  alias: 'Curtains: close the screens'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.bunderhome_weerstation_ws_2902c_uv_index
    above: 2
  condition:
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 10
  - condition: numeric_state
    entity_id: sensor.bunderhome_weerstation_ws_2902c_event_rain
    below: 1
  action:
  - service: cover.close_cover
    entity_id: cover.curtain_controller_curtain
  mode: single
- id: '1667824329070'
  alias: 'Curtains: open the screens'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 1
  - platform: numeric_state
    entity_id: sensor.bunderhome_weerstation_ws_2902c_event_rain
    above: 0
  - platform: numeric_state
    entity_id: sensor.bunderhome_weerstation_ws_2902c_uv_index
    below: 1
  condition: []
  action:
  - service: cover.open_cover
    entity_id: cover.curtain_controller_curtain
  mode: single
- id: '1667824358822'
  alias: 'Utilities: dishwasher notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.dishwasher
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.utility_notification
    data:
      name: dishwasher
      emojis: "\U0001F37D\U0001F373"
  mode: single
- id: '1667824369262'
  alias: 'Utilities: espresso machine notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.espresso_machine
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.utility_notification
    data:
      name: espresso_machine
      emojis: "☕️\U0001F964"
  mode: single
- id: '1667824376670'
  alias: 'Control switches: kitchen corner smart switch long press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3f61695ca7fe49821e99fccf111bd034
    type: action
    subtype: hold
    discovery_id: 0x00158d0007c587f1 action_hold
  action:
  - service: switch.toggle
    entity_id: switch.espresso_machine
  mode: single
- id: '1667824384683'
  alias: 'Utilities: tumble dryer notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.tumble_dryer
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.utility_notification
    data:
      name: tumble_dryer
      emojis: "\U0001F9FA\U0001F4A6"
  mode: single
- id: '1667824391839'
  alias: 'Utilities: turn on espresso machine 10 minutes before waking up'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time")[0:5] == states("sensor.half_hour_before_alarm")
      }}

      '
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock
    state: 'on'
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.espresso_machine
  mode: single
- id: '1667824399151'
  alias: 'Utilities: washing machine notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.washing_machine
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.utility_notification
    data:
      name: washing_machine
      emojis: "\U0001F45A\U0001F455"
  mode: single
- id: '1667824406336'
  alias: 'Utilities: washing machine, dishwasher,tumble dryer or espresso machine
    started or finished'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.dishwasher
  - platform: state
    entity_id: binary_sensor.washing_machine
  - platform: state
    entity_id: binary_sensor.tumble_dryer
  - platform: state
    entity_id: binary_sensor.espresso_machine
  condition:
  - '{{ (to_state == ''on'' and from_state == ''off'') or (to_state == ''off'' and
    from_state == ''on'') }}'
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.{{ name }}_{{ to_state }}
      timestamp: '{{ now().timestamp() }}'
  mode: single
  variables:
    from_state: '{{ trigger.from_state.state }}'
    to_state: '{{ trigger.to_state.state }}'
    name: '{{ trigger.entity_id.split(''.'', 1)[1] }}'
- id: '1667824436721'
  alias: 'Night mode: automatically turn off when alarm turns off or at 7AM'
  description: ''
  trigger:
  - platform: time
    at: 07:00
  - platform: state
    entity_id: input_boolean.alarm_clock
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock
    state: 'off'
  action:
  - entity_id: input_select.sleep_mode
    service: input_select.select_option
    data:
      option: 'off'
  mode: single
- id: '1667824444731'
  alias: 'Night mode: go from half to total sleeping mode'
  description: 'When it is half sleeping mode and there is no activity in the house
    for more than an hour go to total sleeping mode.

    '
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_outside_bedroom
    to: 'off'
    for: 01:00:00
  condition:
  - condition: state
    entity_id: input_select.sleep_mode
    state: half
  action:
  - service: input_select.select_option
    entity_id: input_select.sleep_mode
    data:
      option: total
  - service: notify.mobile_app_bizzyphone
    data:
      title: Night mode
      message: "Automatically switched from 'half' to 'total' sleeping mode! \U0001F4A4\U0001F6CC"
  mode: single
- id: '1667824453738'
  alias: 'Night mode: set low temperature when sleep mode turns on'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
    from: 'off'
  condition: []
  action:
  - service: script.set_low_temperature
    data: {}
  mode: single
- id: '1667824461865'
  alias: 'Night mode: set sleeping mode in the living room'
  description: 'Set the living room lights to sleep mode only when no-one is there
    anymore.

    '
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
    to: total
  condition: []
  action:
  - choose:
    - conditions: '{{ is_state(''binary_sensor.activity_in_living_room'', ''on'')
        }}'
      sequence:
      - wait_for_trigger:
          platform: state
          entity_id: binary_sensor.activity_in_living_room
          from: 'on'
          to: 'off'
        timeout: 06:00:00
        continue_on_timeout: false
      - condition: state
        entity_id: input_select.sleep_mode
        state: total
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_sleep_mode_living_room
    - conditions: '{{ is_state(''binary_sensor.activity_in_living_room'', ''off'')
        }}'
      sequence:
        service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.adaptive_lighting_sleep_mode_living_room
  mode: single
- id: '1667824473454'
  alias: 'Night mode: turn off automatic bedroom lights'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
    from: 'off'
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.automatic_bedroom_lights
  mode: single
- id: '1667824481173'
  alias: 'Night mode: turn off automatic guest bedroom lights'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
    from: 'off'
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.automatic_guest_bedroom_lights
  mode: single
- id: '1667824514805'
  alias: 'Security: back door has been open for more than 5 minutes'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_back_door
    from: 'off'
    to: 'on'
    for: 00:05:00
  condition:
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: notify.all_iphones
    data:
      title: Security
      message: The back door has been open for more than 5 minutes.
  mode: single
- id: '1667824523088'
  alias: 'Security: front door has been open for more than 5 minutes'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_front_door
    from: 'off'
    to: 'on'
    for: 00:05:00
  condition:
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: notify.all_iphones
    data:
      title: Security
      message: The front door has been open for more than 5 minutes.
  mode: single
- id: '1667824532145'
  alias: 'Security: motion detected but we are not home'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_detected
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.persons
    state: not_home
  - condition: state
    entity_id: vacuum.robot_vacuum
    state: docked
  action:
  - service: notify.all_iphones
    data:
      message: 'Security: motion is detected, but we are not home.'
      data:
        actions:
        - action: SOUND_ALARM
          title: Sound alarm
          activationMode: background
          authenticationRequired: true
          destructive: true
  - wait_for_trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SOUND_ALARM
    timeout: 01:00:00
    continue_on_timeout: false
  - service: light.turn_on
    entity_id: all
    data:
      flash: long
      color_name: red
  mode: single
- id: '1667824542123'
  alias: 'Security: no one is home but high power usage'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.p1_meter_active_power
    above: 1200
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: notify.all_iphones
    data:
      title: Security
      message: 'No one is home and we are using a lot of energy ({{ states(''sensor.p1_meter_active_power'')
        }} W now)! ⚡️

        '
  mode: single
- id: '1667825456773'
  alias: 'Light: automatically turn off the bedroom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: 'off'
    for: 00:08:00
  condition:
  - condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: 'on'
  - condition: state
    entity_id: light.bedroom_lights
    state: 'on'
  - condition: state
    entity_id: input_boolean.automatic_bedroom_lights
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.bedroom_lights
    data:
      transition: 10
  mode: single
  initial_state: true
- id: '1667825464005'
  alias: 'Light: automatically turn off the guest bedroom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    to: 'off'
    for: 00:08:00
  condition:
  - condition: state
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
    state: 'on'
  - condition: state
    entity_id: light.guest_bedroom_lights
    state: 'on'
  - condition: state
    entity_id: input_boolean.automatic_guest_bedroom_lights
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.guest_bedroom_lights
    data:
      transition: 10
  mode: single
  initial_state: true
- id: '1667825471613'
  alias: 'Light: automatically turn on the bedroom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: 'on'
  condition:
  - '{{ (off_lights | length) > 0 }}'
  - condition: state
    entity_id: input_select.sleep_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.automatic_bedroom_lights
    state: 'on'
  action:
  - alias: Turn on lights that are off
    repeat:
      count: '{{ off_lights | length }}'
      sequence:
        service: script.turn_on_lights
        data:
          entity_id: '{{ off_lights[repeat.index - 1] }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
  mode: single
  variables:
    off_lights: "{{ expand(state_attr(\"light.bedroom_lights\", \"entity_id\"))\n
      \   | selectattr(\"state\", \"eq\", \"off\")\n    | map(attribute=\"entity_id\")\n
      \   | list }}\n"
- id: '1667825482217'
  alias: 'Light: automatically turn on the guest bedroom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    to: 'on'
  condition:
  - '{{ (off_lights | length) > 0 }}'
  - condition: state
    entity_id: input_select.sleep_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.automatic_guest_bedroom_lights
    state: 'on'
  action:
  - alias: Turn on lights that are off
    repeat:
      count: '{{ off_lights | length }}'
      sequence:
        service: script.turn_on_lights
        data:
          entity_id: '{{ off_lights[repeat.index - 1] }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
  mode: single
  variables:
    off_lights: "{{ expand(state_attr(\"light.guest_bedroom_lights\", \"entity_id\"))\n
      \   | selectattr(\"state\", \"eq\", \"off\")\n    | map(attribute=\"entity_id\")\n
      \   | list }}\n"
- id: '1667825490219'
  alias: 'Light: toggle bathroom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_bathroom
  condition:
  - '{{ not is_state(''light.bathroom_lights'', trigger.to_state.state) }}'
  action:
  - service: light.turn_{{ trigger.to_state.state }}
    data:
      entity_id: light.bathroom_lights
      transition: 1
  mode: single
- id: '1667825497384'
  alias: 'Light: turn on kitchen ceiling'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 36c9dd750502dd843b34eb46c8e92827
    entity_id: binary_sensor.motion_sensor_kitchen
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: timer.kitchen_ceiling_lights_on
      state: active
    - type: is_illuminance
      condition: device
      device_id: 36c9dd750502dd843b34eb46c8e92827
      entity_id: sensor.motion_sensor_kitchen_illuminance_lux
      domain: sensor
      below: 50
  action:
  - service: script.turn_on_lights
    data:
      entity_id: light.kitchen_lights
  - service: timer.start
    data: {}
    target:
      entity_id: timer.kitchen_ceiling_lights_on
  mode: single
- id: '1667825504387'
  alias: 'Light: turn on toilet'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: a1e62ac31f7598ff24bc0d008de76a90
    entity_id: binary_sensor.motion_sensor_toilet
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: timer.toilet_light_on
      state: active
    - type: is_illuminance
      condition: device
      device_id: a1e62ac31f7598ff24bc0d008de76a90
      entity_id: sensor.motion_sensor_toilet_illuminance_lux
      domain: sensor
      below: 100
  action:
  - service: script.turn_on_lights
    data:
      entity_id: light.toilet
  - service: timer.start
    data: {}
    target:
      entity_id: timer.toilet_light_on
  mode: single
- id: '1667825512579'
  alias: 'Light: turn off bathroom (extra check)'
  description: In case the other automation failed
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: state
    entity_id: binary_sensor.activity_in_bathroom
    state: 'off'
  - condition: state
    entity_id: light.bathroom_lights
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.bathroom_lights
  mode: single
- id: '1667825521896'
  alias: 'Light: turn off bedroom (extra check)'
  description: In case the other automation failed
  trigger:
  - platform: time_pattern
    minutes: /30
  condition:
  - condition: state
    entity_id: binary_sensor.activity_in_bedroom
    state: 'off'
  - condition: state
    entity_id: input_boolean.automatic_bedroom_lights
    state: 'on'
  - condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.bedroom_lights
  - service: light.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
  mode: single
- id: '1667825530088'
  alias: 'Light: turn off bedroom after 2 hours of inactivity'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_bedroom
    from: 'on'
    to: 'off'
    for: 02:00:00
  condition:
  - '{{ is_state(''light.bedroom_lights'', ''on'') }}'
  action:
  - service: light.turn_off
    data:
      entity_id: light.bedroom_lights
  mode: single
- id: '1667825538989'
  alias: 'Light: turn off bedroom lights auto switch'
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom_lights
    to: 'off'
  - platform: event
    event_type: deconz_event
    event_data:
      id: dimmer_switch_bedroom
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_bedroom_tom
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_bedroom_tanja
  - platform: event
    event_type: deconz_event
    event_data:
      id: bedroom_wall_switch
  condition:
  - condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
  mode: parallel
- id: '1667825551422'
  alias: 'Light: turn off guest bedroom (extra check)'
  description: In case the other automation failed
  trigger:
  - platform: time_pattern
    minutes: /30
  condition:
  - condition: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    state: 'off'
  - condition: state
    entity_id: input_boolean.automatic_guest_bedroom_lights
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.guest_bedroom_lights
  - service: light.turn_off
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
  mode: single
- id: '1667825572757'
  alias: 'Light: turn off guest bedroom after 2 hours of inactivity'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_guest_bedroom
    from: 'on'
    to: 'off'
    for: 02:00:00
  condition:
  - '{{ is_state(''light.guest_bedroom_lights'', ''on'') }}'
  action:
  - service: light.turn_off
    data:
      entity_id: light.guest_bedroom_lights
  mode: single
- id: '1667825581074'
  alias: 'Light: turn off guest bedroom lights auto switch'
  description: ''
  trigger:
  - platform: state
    entity_id: light.guest_bedroom_lights
    to: 'off'
  - platform: event
    event_type: deconz_event
    event_data:
      id: dimmer_switch_guest_bedroom
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_guest_bedroom
  - platform: event
    event_type: deconz_event
    event_data:
      id: guest_bedroom_wall_switch
  condition:
  - condition: state
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.guest_bedroom_lights_automatically_turned_on
  mode: parallel
- id: '1667825591656'
  alias: 'Light: turn off kitchen ceiling'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - timer.kitchen_ceiling_lights_on
    from: active
    to: idle
  - type: no_motion
    platform: device
    device_id: 36c9dd750502dd843b34eb46c8e92827
    entity_id: binary_sensor.motion_sensor_kitchen
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: timer.kitchen_ceiling_lights_on
    state: idle
  - type: is_no_motion
    condition: device
    device_id: 36c9dd750502dd843b34eb46c8e92827
    entity_id: binary_sensor.motion_sensor_kitchen
    domain: binary_sensor
  action:
  - service: light.turn_off
    data:
      transition: 1
    target:
      entity_id: light.kitchen_lights
  mode: single
- id: '1667825599556'
  alias: 'Light: turn off living room'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    entity_id: light.living_room_lights
  mode: single
- id: '1667825609122'
  alias: 'Light: turn off outside lights'
  description: ''
  trigger:
  - platform: time
    at: 01:00:00
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 1
  condition: []
  action:
  - service: light.turn_off
    data:
      entity_id: light.outside_lights
      transition: 1
  mode: single
- id: '1667825617439'
  alias: 'Light: turn off toilet'
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: a1e62ac31f7598ff24bc0d008de76a90
    entity_id: binary_sensor.motion_sensor_toilet
    domain: binary_sensor
  - platform: state
    entity_id:
    - timer.toilet_light_on
    from: active
    to: idle
  condition:
  - condition: state
    entity_id: timer.toilet_light_on
    state: idle
  - type: is_no_motion
    condition: device
    device_id: a1e62ac31f7598ff24bc0d008de76a90
    entity_id: binary_sensor.motion_sensor_toilet
    domain: binary_sensor
  action:
  - service: light.turn_off
    entity_id: light.toilet
  mode: single
- id: '1667825627092'
  alias: 'Light: turn on automatic_bedroom_lights switch'
  description: ''
  trigger:
  - platform: time
    at: '12:00'
  condition: []
  action:
  - entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on
  mode: single
- id: '1667825645381'
  alias: 'Light: turn on automatic_guest_bedroom_lights switch'
  description: ''
  trigger:
  - platform: time
    at: '12:00'
  condition: []
  action:
  - entity_id: input_boolean.automatic_guest_bedroom_lights
    service: input_boolean.turn_on
  mode: single
- id: '1667825653475'
  alias: 'Light: turn on cozy lights at sunset'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 1
  condition:
  - condition: state
    entity_id: group.persons
    state: home
  action:
  - service: script.cozy_lights_living_room
    data: {}
  mode: single
- id: '1667825661217'
  alias: 'Light: turn on living room'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    entity_id: light.living_room_lights
  mode: single
- id: '1667825668872'
  alias: 'Light: turn on outside lights'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 1
  - platform: sun
    event: sunrise
    offset: '-2:00:00'
  condition: []
  action:
  - service: light.turn_on
    data:
      transition: 1
    target:
      entity_id:
      - light.terrace_lights
  mode: single
- id: '1667825677223'
  alias: 'Light: turn on the outside lights when arriving'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: 6
    above: 1
  - platform: zone
    entity_id: person.tom
    zone: zone.home
    event: enter
  - platform: zone
    entity_id: person.tanja
    zone: zone.home
    event: enter
  condition:
  - condition: template
    value_template: '{{ state_attr(''sun.sun'', ''elevation'') < 1 }}'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: proximity.home
    attribute: dir_of_travel
    state: towards
  action:
  - service: light.turn_on
    data:
      entity_id: light.outside_lights
      transition: 1
  mode: single
- id: '1667825784014'
  alias: 'Arriving: switch music from iPhone to speakers if no one is home'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_front_door
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.openclose_back_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.tanja
    state: not_home
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  - '{{ is_state_attr(''media_player.spotify'', ''source'', ''bizzyphone'') }}'
  - '{{ is_state(''media_player.spotify'', ''playing'') }}'
  action:
  - service: notify.mobile_app_bizzyphone
    data:
      title: Arriving
      message: Switched music from phone to speakers
  - service: spotcast.start
    data:
      entity_id: media_player.google_home
      force_playback: false
  mode: single
- id: '1667825808931'
  alias: 'Electric vehicle: check total solar on plugin'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bizzylectric_charger
    to: 'on'
  condition:
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  - condition: state
    entity_id: input_boolean.optimal_electric_vehicle_charging
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.bizzylectric_charger
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.electric_vehicle_update_charge_rate_every_minute
  mode: single
- id: '1667825817257'
  alias: 'Electric vehicle: polling interval to 60'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.bizzylectric_charger
    to: 'on'
  condition:
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  action:
  - service: script.electric_vehicle_polling_interval_to_60
    data: {}
  mode: single
- id: '1667825825124'
  alias: 'Electric vehicle: polling interval to default'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.bizzylectric_charger
    to: 'off'
  condition:
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  action:
  - service: script.electric_vehicle_polling_interval_to_default
    data: {}
  mode: single
- id: '1667825834309'
  alias: 'Electric vehicle: start charging at total solar'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.p1_meter_active_power
    for:
      hours: 0
      minutes: 0
      seconds: 20
    below: 1000
  condition:
  - condition: state
    entity_id: binary_sensor.bizzylectric_charger
    state: 'on'
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  - condition: state
    entity_id: input_boolean.optimal_electric_vehicle_charging
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.bizzylectric_charger
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.electric_vehicle_update_charge_rate_every_minute
  mode: single
- id: '1667825841909'
  alias: 'Electric vehicle: stop charging'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.p1_meter_active_power
    for:
      hours: 0
      minutes: 1
      seconds: 0
    above: 4000
  - platform: sun
    event: sunset
    offset: '0'
  - platform: numeric_state
    entity_id: sensor.bizzylectric_range
    above: '415'
  - platform: state
    entity_id:
    - switch.bizzylectric_charger
    to: 'off'
  condition:
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  - condition: numeric_state
    entity_id: sensor.bizzylectric_charging_rate
    above: '2'
  - condition: state
    entity_id: input_boolean.optimal_electric_vehicle_charging
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.bizzylectric_charger
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.electric_vehicle_update_charge_rate_every_minute
  mode: single
- id: '1667825849521'
  alias: 'Electric vehicle: update charge rate every minute'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: time
    after: 04:00:00
    before: '23:00:00'
  - condition: state
    entity_id: device_tracker.bizzylectric_location_tracker
    state: home
  - condition: state
    entity_id: input_boolean.optimal_electric_vehicle_charging
    state: 'on'
  action:
  - service: script.electric_vehicle_charging_set_amps_link_to_excess_solar
    data: {}
  mode: single
- id: '1667825870992'
  alias: 'Control switches: back door smart switch double press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a193eeeff67086f9aecbf8cd7682a111
    type: action
    subtype: double
    discovery_id: 0x00158d0007c586ef action_double
  condition: []
  action:
  - service: script.arriving
    data: {}
  mode: parallel
- id: '1667825878616'
  alias: 'Control switches: bathroom wall switch'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: dca50e5cf0fefbc38184bfaa23da067f
    type: action
    subtype: left_press
    discovery_id: 0x001788010b011991 action_left_press
  - platform: device
    domain: mqtt
    device_id: dca50e5cf0fefbc38184bfaa23da067f
    type: action
    subtype: left_press_release
    discovery_id: 0x001788010b011991 action_left_press_release
  condition: []
  action:
  - service: light.toggle
    data:
      transition: 1
    target:
      entity_id: light.bathroom_lights
  mode: parallel
- id: '1667825887364'
  alias: 'Control switches: bedroom wall switch'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: b4280590434a9d2f55a18d01531a75a8
    type: action
    subtype: left_press
    discovery_id: 0x001788010b0119c2 action_left_press
  - platform: device
    domain: mqtt
    device_id: b4280590434a9d2f55a18d01531a75a8
    type: action
    subtype: left_press_release
    discovery_id: 0x001788010b0119c2 action_left_press_release
  condition: []
  action:
  - service: light.toggle
    data:
      transition: 1
    target:
      entity_id: light.bedroom_lights
  mode: parallel
- id: '1667825913603'
  alias: 'Control switches: guest bedroom smart switches single press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 489427482b98a991234648ba15ff3829
    type: action
    subtype: single
    discovery_id: 0x00158d0007b7fa65 action_single
  - platform: device
    domain: mqtt
    device_id: ac7e9e8ab3dbdc09e0ec8d3a6a5caa2f
    type: action
    subtype: single
    discovery_id: 0x00158d0007b7f85d action_single
  condition: []
  action:
  - service: light.toggle
    data:
      transition: 1
    target:
      entity_id: light.guest_bedroom_lights
  mode: parallel
- id: '1667825921379'
  alias: 'Control switches: guest bedroom smart switches long press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 489427482b98a991234648ba15ff3829
    type: action
    subtype: release
    discovery_id: 0x00158d0007b7fa65 action_release
  - platform: device
    domain: mqtt
    device_id: ac7e9e8ab3dbdc09e0ec8d3a6a5caa2f
    type: action
    subtype: release
    discovery_id: 0x00158d0007b7f85d action_release
  condition: []
  action:
  - service: script.going_to_sleep
    data: {}
  mode: parallel
- id: '1667825953356'
  alias: 'Climate: increase the heating for the afternoon'
  description: ''
  trigger:
  - platform: time
    at: '11:00'
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: state
    entity_id:
    - input_boolean.automatic_temperature
    state: 'on'
  action:
  - service: script.set_high_temperature
    data: {}
  mode: single
- id: '1667825960584'
  alias: 'Climate: turn off the heating at 23:00'
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  condition:
  - condition: state
    entity_id: input_boolean.automatic_temperature
    state: 'on'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - '{{ not is_state_attr(''climate.living_room'', ''temperature'', states(''input_number.temperature_low'')|float(default=0))
    }}'
  action:
  - service: script.set_low_temperature
    data: {}
  - service: notify.all_iphones
    data:
      message: "Turned off the heating \U0001F976, click to turn it on again?"
      data:
        actions:
        - action: TURN_ON_HEATING
          title: Turn on heating
          activationMode: background
          authenticationRequired: true
          destructive: true
  - wait_for_trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: TURN_ON_HEATING
    timeout: 00:00:20
    continue_on_timeout: false
  - service: script.set_high_temperature
    data: {}
  mode: single
- id: '1667825968169'
  alias: 'Climate: turn on the heating 30 min before waking up'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time")[0:5] == states("sensor.half_hour_before_alarm")
      }}

      '
  condition:
  - condition: state
    entity_id:
    - input_boolean.alarm_clock
    - input_boolean.automatic_temperature
    state: 'on'
  action:
  - service: script.set_moderate_temperature
    data: {}
  - service: notify.all_iphones
    data:
      title: Climate
      message: "Automatically turned on the heating \U0001F975℃"
  mode: single
- id: '1667825975717'
  alias: 'Climate: turn on the heating when going home'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: 6
    above: 1
  condition:
  - condition: state
    entity_id: input_boolean.automatic_temperature
    state: 'on'
  - condition: time
    after: '16:00:00'
    before: '23:00:00'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: proximity.home
    attribute: dir_of_travel
    state: towards
  - condition: template
    value_template: '{{ not is_state_attr(''climate.living_room'', ''temperature'',
      states(''input_number.temperature_high'')) }}'
  action:
  - service: script.set_high_temperature
    data: {}
  - service: notify.all_iphones
    data:
      title: Climate
      message: "Automatically turned on the heating \U0001F975℃"
  mode: single
- id: '1667825984108'
  alias: 'Climate: warning when heating on and back door open'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_back_door
    to: 'on'
    for: 00:05:00
  condition:
  - alias: Living room or kitchen above 18°C
    condition: or
    conditions:
    - '{{ state_attr(''climate.living_room'', ''temperature'') >= 18 }}'
    - '{{ state_attr(''climate.kitchen'', ''temperature'') >= 18 }}'
  action:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.openclose_back_door
        state: 'on'
      - condition: template
        value_template: '{{ repeat.index <= 6 }}'
      sequence:
      - service: notify.all
        data:
          title: Climate
          message: 'The back door is open and the heating is on! ⚠️ Warning #{{ repeat.index
            }}!'
      - delay: 00:05:00
  - condition: state
    entity_id: binary_sensor.openclose_back_door
    state: 'on'
  - service: notify.all
    data:
      title: Climate
      message: Turning off the heating!
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_low") }}'
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_low") }}'
  mode: single
- id: '1667825992534'
  alias: 'Climate: warning when heating on and living room door open'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_living_room_door
    to: 'on'
    for: 00:05:00
  condition:
  - alias: Living room or kitchen above 18°C
    condition: or
    conditions:
    - '{{ state_attr(''climate.living_room'', ''temperature'') >= 18 }}'
    - '{{ state_attr(''climate.kitchen'', ''temperature'') >= 18 }}'
  action:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.openclose_living_room_door
        state: 'on'
      - condition: template
        value_template: '{{ repeat.index <= 6 }}'
      sequence:
      - service: notify.all
        data:
          title: Climate
          message: 'The living room door is open and the heating is on! ⚠️ Warning
            #{{ repeat.index }}!'
      - delay: 00:05:00
  - condition: state
    entity_id: binary_sensor.openclose_living_room_door
    state: 'on'
  - service: notify.all
    data:
      title: Climate
      message: Turning off the heating!
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_low") }}'
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_low") }}'
  mode: single
- id: '1667826000712'
  alias: 'Climate: warning when heating on and storage door open'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_storage_door
    to: 'on'
    for: 00:05:00
  condition:
  - alias: Living room or kitchen above 18°C
    condition: or
    conditions:
    - '{{ state_attr(''climate.living_room'', ''temperature'') >= 18 }}'
    - '{{ state_attr(''climate.kitchen'', ''temperature'') >= 18 }}'
  action:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.openclose_storage_door
        state: 'on'
      - condition: template
        value_template: '{{ repeat.index <= 6 }}'
      sequence:
      - service: notify.all
        data:
          title: Climate
          message: 'The storage door is open and the heating is on! ⚠️ Warning #{{
            repeat.index }}!'
      - delay: 00:05:00
  - condition: state
    entity_id: binary_sensor.openclose_storage_door
    state: 'on'
  - service: notify.all
    data:
      title: Climate
      message: Turning off the heating!
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_low") }}'
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_low") }}'
  mode: single
- id: '1672097899656'
  alias: 'Control switches: back door smart switch single press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a193eeeff67086f9aecbf8cd7682a111
    type: action
    subtype: single
    discovery_id: 0x00158d0007c586ef action_single
  condition: []
  action:
  - service: script.leaving
    data: {}
  mode: single
- id: '1672098103382'
  alias: 'Control switches: back door smart switch long press'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a193eeeff67086f9aecbf8cd7682a111
    type: action
    subtype: release
    discovery_id: 0x00158d0007c586ef action_release
  condition: []
  action:
  - service: script.arriving
    data: {}
  - service: script.start_spotify_playlist_of_nearest_person
    data:
      entity_id: media_player.google_home
  mode: parallel
- id: '1672142816999'
  alias: 'Control switches: living room dimmer switch hue pressed'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: off_press
    discovery_id: 0x0017880109a4fcb5 action_off_press
  condition: []
  action:
  - service: input_select.select_next
    data: {}
    target:
      entity_id: input_select.living_room_dimmer_mode
  - service: media_player.volume_set
    data:
      volume_level: 0.4
    target:
      entity_id: media_player.google_home
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      message: '{{ states(''input_select.living_room_dimmer_mode'')}} lights'
      language: en
  mode: single
- id: '1672143421571'
  alias: 'Control switches: living room dimmer switch power pressed'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: on_press
    discovery_id: 0x0017880109a4fcb5 action_on_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Dining table
      sequence:
      - service: light.toggle
        data:
          transition: 1
        target:
          entity_id: light.living_room_dining_table_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Middle
      sequence:
      - service: light.toggle
        data:
          transition: 1
        target:
          entity_id: light.living_room_middle_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: TV led
      sequence:
      - service: light.toggle
        data:
          transition: 1
        target:
          entity_id: light.tv_led
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Reading
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.hue_plug
  mode: single
- id: '1672144644649'
  alias: 'Control switches: living room dimmer switch brightness up'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: up_hold
    discovery_id: 0x0017880109a4fcb5 action_up_hold
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: up_press
    discovery_id: 0x0017880109a4fcb5 action_up_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Dining table
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          entity_id: light.living_room_dining_table_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Middle
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          entity_id: light.living_room_middle_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: TV led
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          entity_id: light.tv_led
  mode: single
- id: '1672144707454'
  alias: 'Control switches: living room dimmer switch brightness down'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: down_hold
    discovery_id: 0x0017880109a4fcb5 action_down_hold
  - platform: device
    domain: mqtt
    device_id: c8c08de8009dd9e17fd5e5e18ce13fa3
    type: action
    subtype: down_press
    discovery_id: 0x0017880109a4fcb5 action_down_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Dining table
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: -10
        target:
          entity_id: light.living_room_dining_table_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: Middle
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: -10
        target:
          entity_id: light.living_room_middle_lights
    - conditions:
      - condition: state
        entity_id: input_select.living_room_dimmer_mode
        state: TV led
      sequence:
      - service: light.turn_on
        data:
          brightness_step_pct: -10
        target:
          entity_id: light.tv_led
  mode: single
- id: '1672842099894'
  alias: 'Light: turn on outside christmas lights'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 1
  condition: []
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.outside_christmas_lights
  mode: single
