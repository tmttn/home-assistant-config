- id: '1636727868357'
  alias: 'Vacuum: disable vacuum camera update when docked'
  description: ''
  use_blueprint:
    path: PiotrMachowski/disable_vacuum_camera_update_when_docked.yaml
    input:
      vacuum: vacuum.robot_vacuum
      camera: camera.xiaomi_cloud_map_extractor
- id: '1667822050564'
  alias: 'Adaptive lighting: notify manual_control'
  description: ''
  trigger:
  - platform: event
    event_type: adaptive_lighting.manual_control
  condition: []
  action:
  - service: system_log.write
    data:
      message: '{{ light }} is manually controlled'
      level: error
      logger: yolo.yolo
  - service: notify.mobile_app_bizzyphone
    data:
      title: 'Adaptive Ligthing: manual_control'
      message: '{{ light }} is now ''manually controlled'', context={{ trigger.event.context
        }}'
  mode: parallel
  max: 20
  variables:
    light: '{{ trigger.event.data.entity_id }}'
- id: '1667822131571'
  alias: 'Adaptive lighting: reset manual_control after 1 hour'
  description: ''
  trigger:
  - platform: event
    event_type: adaptive_lighting.manual_control
  condition:
  - '{{ ''hall'' not in light and ''stairs'' not in light }}'
  action:
  - delay: 01:00:00
  - condition: template
    value_template: '{{ light in state_attr(''switch'', ''manual_control'') }}'
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: '{{ switch }}'
      lights: '{{ light }}'
      manual_control: false
  - service: notify.mobile_app_bizzyphone
    data:
      title: 'Adaptive Ligthing: manual_control reset'
      message: '{{ light }} is reset to not ''manually controlled'''
  mode: parallel
  max: 200
  variables:
    light: '{{ trigger.event.data.entity_id }}'
    switch: '{{ trigger.event.data.switch }}'
- id: '1667822350382'
  alias: 'Adaptive lighting: turn on and off switches'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.sleep_mode
  - platform: homeassistant
    event: start
  condition: []
  action:
  - choose:
    - conditions: '{{ sleep_mode == ''off'' }}'
      sequence:
      - service: switch.turn_off
        entity_id:
        - switch.adaptive_lighting_half_and_dim
        - switch.adaptive_lighting_half_and_full
        - switch.adaptive_lighting_sleep_mode_default
        - switch.adaptive_lighting_sleep_mode_living_room
      - service: switch.turn_on
        entity_id:
        - switch.adaptive_lighting_default
    - conditions: '{{ sleep_mode == ''half'' }}'
      sequence:
      - service: switch.turn_off
        entity_id:
        - switch.adaptive_lighting_default
        - switch.adaptive_lighting_sleep_mode_half_and_full
      - service: switch.turn_on
        entity_id:
        - switch.adaptive_lighting_half_and_dim
        - switch.adaptive_lighting_half_and_full
        - switch.adaptive_lighting_sleep_mode_half_and_dim
    - conditions: '{{ sleep_mode == ''total'' }}'
      sequence:
      - service: switch.turn_off
        entity_id:
        - switch.adaptive_lighting_half_and_dim
        - switch.adaptive_lighting_half_and_full
      - service: switch.turn_on
        entity_id:
        - switch.adaptive_lighting_default
        - switch.adaptive_lighting_sleep_mode_default
  mode: single
  variables:
    sleep_mode: '{{ states(''input_select.sleep_mode'') }}'
- id: '1667822399597'
  alias: 'Alarm clock: wake up'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time")[0:5] == states("sensor.ten_minutes_before_alarm")
      }}

      '
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.alarm_clock
  - service: input_boolean.turn_on
    entity_id: input_boolean.wake_up_light
  - service: input_select.select_option
    entity_id: input_select.sleep_mode
    data:
      option: 'off'
  mode: single
- id: '1667822429438'
  alias: 'Candy: Marthe candy button pressed'
  description: ''
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kitchen_candy
  condition:
  - '{{ trigger.event.data.event == 1002 }}'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: time
        weekday:
        - tue
        - thu
        - sat
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Het is vandaag geen snoepdag. Je mag vandaag geen snoepjes.
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'on'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Stop! Jij hebt al een snoepje gekregen. Geen snoepjes meer vandaag,
            anders krijg je rotte tandjes.
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'off'
      - condition: time
        before: '10:00:00'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Nu al een snoepje, nee dat is veel te vroeg hoor. Moet jij niet
            eerst ontbijten?
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_candy
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja hoor, neem maar een snoepje Marthe. Lekker!
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.marthe_candy
  mode: single
- id: '1667822442780'
  alias: 'Candy: reset input_boolean Marthe candy at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.marthe_candy
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.marthe_candy
  mode: single
- id: '1667822469555'
  alias: 'Doorbell: the doorbell has been pressed'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_ding
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data:
      flash: short
      entity_id:
      - light.living_room_lights
      - light.kitchen_lights
  - service: notify.all_iphones
    data:
      title: Doorbell
      message: Someone in front of the door!
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      language: nl
      message: Er is iemand aan de voordeur.
  mode: single
- id: '1667822507159'
  alias: 'Music: start playlist'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.start_the_music
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.start_the_music
  - service: script.start_spotify_playlist_of_nearest_person
    data:
      source: Google Home
      entity_id: media_player.google_home
  mode: single
  initial_state: true
- id: '1667822516904'
  alias: 'Music: switch music from iPhone to speakers if coming home'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.openclose_back_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.tanja
    state: not_home
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  - '{{ is_state_attr(''media_player.spotify'', ''source'', ''bizzyphone'') }}'
  - '{{ is_state(''media_player.spotify'', ''playing'') }}'
  - '{{ as_timestamp(now()) - as_timestamp(states.person.tom.last_changed) < 5 * 60
    }}'
  - condition: numeric_state
    entity_id: proximity.home
    below: 2
  action:
  - service: spotcast.start
    data:
      entity_id: media_player.google_home
      force_playback: false
  mode: single
- id: '1667822559671'
  alias: 'Plant: problem with Calathea Medaillon'
  description: ''
  trigger:
  - platform: state
    entity_id: plant.calathea_medaillon
    to: problem
  - platform: time
    at: '20:00'
  condition:
  - condition: state
    entity_id: plant.calathea_medaillon
    state: problem
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - '{{ state_attr(''plant.calathea_medaillon'', ''moisture'') | int(default=-1) >=
    0}}'
  action:
  - service: notify.all_iphones
    data:
      title: Plant in trouble! ⚠️☢️☠️
      message: "You need to give the Calathea Medaillon \U0001FAB4 attention and love:
        {{ state_attr(\"plant.calathea_medaillon\", \"problem\") }}!\n"
  mode: single
- id: '1667822568415'
  alias: 'Plant: problem with Peperomia Glabella'
  description: ''
  trigger:
  - platform: state
    entity_id: plant.peperomia_glabella
    to: problem
  - platform: time
    at: '20:00'
  condition:
  - condition: state
    entity_id: plant.peperomia_glabella
    state: problem
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - '{{ state_attr(''plant.peperomia_glabella'', ''moisture'') | int(default=-1) >=
    0}}'
  action:
  - service: notify.all_iphones
    data:
      title: Plant in trouble! ⚠️☢️☠️
      message: "You need to give the Peperomia Glabella \U0001F33A attention and love:
        {{ state_attr(\"plant.peperomia_glabella\", \"problem\") }}!\n"
  mode: single
- id: '1667822595280'
  alias: 'Work: go home notification'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.worked_enough_today
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.work_hour_notification_sent
    state: 'off'
  action:
  - service: notify.mobile_app_bizzyphone
    data:
      title: Work
      message: "You have worked 8 hours today, very good! Go home \U0001F389"
  - service: input_boolean.turn_on
    entity_id: input_boolean.work_hour_notification_sent
  mode: single
- id: '1667822602824'
  alias: 'Work: reset input_boolean at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.work_hour_notification_sent
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.work_hour_notification_sent
  mode: single
- id: '1667822612254'
  alias: 'Work: Tom left work notification for Tanja'
  description: ''
  trigger:
  - platform: state
    entity_id: person.tom
    from: Work
  condition:
  - condition: time
    after: '15:00:00'
    before: '22:00:00'
  action:
  - service: notify.mobile_app_t_phone
    data:
      title: Work
      message: "Tom has left work! ♥️\U0001F389"
  mode: single
- id: '1667822923688'
  alias: 'Lovelace: convert lovelace.json to lovelace-ui.yaml'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.lovelace
  condition: []
  action:
  - service: shell_command.convert_lovelace
    data: {}
  - service: shell_command.chores
    data: {}
  mode: single
  initial_state: true
- id: '1667822959782'
  alias: 'Vacation mode: auto turn off'
  description: ''
  trigger:
  - platform: state
    entity_id: group.persons
    from: not_home
    to: home
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.vacation_mode
  - service: notify.all_iphones
    data:
      title: Vacation mode
      message: Welcome back! Switching off the vacation mode.
  mode: single
  initial_state: true
- id: '1667822970472'
  alias: 'Vacation mode: auto turn on'
  description: ''
  trigger:
  - platform: state
    entity_id: group.persons
    from: home
    to: not_home
    for: '24:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.vacation_mode
  - service: notify.all_iphones
    data:
      title: Vacation mode
      message: No one at home for 24 hours, switching on vacation mode.
  mode: single
  initial_state: true
- id: '1667823588355'
  alias: 'Apple Watch: minimal lights bedroom'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Minimal lights bedroom
  condition: []
  action:
  - service: light.turn_on
    data:
      entity_id:
      - light.bed_led
      brightness: 1
      color_name: red
  mode: single
- id: '1667823597022'
  alias: 'Apple Watch: movie time'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Movie time
  condition: []
  action:
  - service: light.turn_on
    data:
      entity_id:
      - light.tv_led
      brightness: 5
      color_name: red
  - service: light.turn_on
    data:
      entity_id:
      - light.hue_plug
      brightness: 5
  mode: single
- id: '1667823607781'
  alias: 'Apple Watch: reset adaptive lighting'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Reset adaptive lighting
  condition: []
  action:
  - service: script.reset_adaptive_lighting
    data: {}
  mode: single
- id: '1667823630963'
  alias: 'Apple Watch: send vacuum cleaner'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Vacuum
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-',
        '_') }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: vacuum'
      data:
        actions:
        - action: VACUUM_LIVING_ROOM
          title: Living room
        - action: VACUUM_BEDROOM
          title: Bedroom
        - action: VACUUM_OFFICE
          title: Office
        - action: VACUUM_HALL
          title: Hall
        - action: VACUUM_KITCHEN
          title: Kitchen
        - action: VACUUM_ALL
          title: All
        - action: VACUUM_STOP
          title: Stop and return
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_LIVING_ROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_BEDROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_OFFICE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_HALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_KITCHEN
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_ALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_STOP
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      location: '{{ wait.trigger.event.data.action.lower().split(''vacuum_'')[1] }}'
  - service: script.vacuum_command
    data:
      option: '{{ location }}'
  mode: parallel
- id: '1667823645606'
  alias: 'Apple Watch: set lights'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set lights
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-',
        '_') }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set lights'
      data:
        actions:
        - action: SET_LIGHTS_ALL
          title: All
        - action: SET_LIGHTS_BEDROOM
          title: Bedroom
        - action: SET_LIGHTS_LIVING_ROOM
          title: Living room
        - action: SET_LIGHTS_BATHROOM
          title: Bathroom
        - action: SET_LIGHTS_HALL_AND_STAIRS
          title: Hall and stairs
        - action: SET_LIGHTS_TOILET
          title: Toilet
        - action: SET_LIGHTS_KITCHEN
          title: Kitchen
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_ALL
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_BEDROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_LIVING_ROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_BATHROOM
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_HALL_AND_STAIRS
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_TOILET
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SET_LIGHTS_KITCHEN
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      light: "{{\n  {'SET_LIGHTS_ALL': 'all',\n   'SET_LIGHTS_BEDROOM': 'light.bedroom_lights',\n
        \  'SET_LIGHTS_LIVING_ROOM': 'light.living_room_lights',\n   'SET_LIGHTS_BATHROOM':
        'light.ceiling_bathroom',\n   'SET_LIGHTS_TOILET': 'light.toilet',\n   'SET_LIGHTS_KITCHEN':
        'light.kitchen_lights',\n  }[wait.trigger.event.data.action] }}\n"
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: choose option'
      data:
        actions:
        - action: LIGHTS_OFF
          title: 'Off'
        - action: LIGHTS_ON
          title: 'On'
        - action: LIGHTS_FIFTY
          title: 50%
        - action: LIGHTS_HUNDRED
          title: 100%
        - action: LIGHTS_ONE
          title: 1%
        - action: LIGHTS_WHITE
          title: White lights
        - action: LIGHTS_COZY
          title: Cozy lights
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_OFF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_ON
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_FIFTY
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_HUNDRED
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_ONE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_WHITE
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: LIGHTS_COZY
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      option: '{{ wait.trigger.event.data.action }}'
  - choose:
    - conditions: '{{ option == ''LIGHTS_OFF'' }}'
      sequence:
        service: light.turn_off
        data:
          entity_id: '{{ light }}'
    - conditions: '{{ option == ''LIGHTS_ON'' }}'
      sequence:
        service: script.turn_on_lights
        data:
          entity_id: '{{ light }}'
    - conditions: '{{ option == ''LIGHTS_FIFTY'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 50
    - conditions: '{{ option == ''LIGHTS_HUNDRED'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 100
    - conditions: '{{ option == ''LIGHTS_ONE'' }}'
      sequence:
        service: light.turn_on
        data:
          entity_id: '{{ light }}'
          brightness_pct: 1
    - conditions: '{{ option == ''LIGHTS_WHITE'' and light == ''light.living_room_lights''}}'
      sequence:
        service: script.white_lights_living_room
        data: {}
    - conditions: '{{ option == ''LIGHTS_WHITE'' and light == ''light.bedroom_lights''}}'
      sequence:
        service: script.white_lights_bedroom
        data: {}
    - conditions: '{{ option == ''LIGHTS_COZY'' and light == ''light.living_room_lights''}}'
      sequence:
        service: script.cozy_lights_living_room
        data: {}
    - conditions: '{{ option == ''LIGHTS_COZY'' and light == ''light.bedroom_lights''}}'
      sequence:
        service: script.cozy_lights_bedroom
        data: {}
  mode: parallel
- id: '1667823657172'
  alias: 'Apple Watch: set sleep mode'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set sleep mode
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-',
        '_') }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set sleep mode.'
      data:
        actions:
        - action: SLEEP_OFF
          title: 'Off'
        - action: SLEEP_HALF
          title: Half
        - action: SLEEP_TOTAL
          title: Total
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_OFF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_HALF
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: SLEEP_TOTAL
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      event: '{{ wait.trigger.event.data.action.lower().split(''_'')[1] }}'
  - service: input_select.select_option
    data:
      entity_id: input_select.sleep_mode
      option: '{{ event }}'
  mode: parallel
- id: '1667823665764'
  alias: 'Apple Watch: set temperature'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Set temperature
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-',
        '_') }}
  - service: '{{ iphone }}'
    data:
      message: 'Apple Watch: set temperature'
      data:
        actions:
        - action: T15
          title: '15'
        - action: T16
          title: '16'
        - action: T17
          title: '17'
        - action: T18
          title: '18'
        - action: T19
          title: '19'
        - action: T20
          title: '20'
        - action: T21
          title: '21'
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T15
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T16
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T17
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T18
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T19
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T20
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: T21
    timeout: 00:00:20
    continue_on_timeout: false
  - variables:
      temperature: '{{ wait.trigger.event.data.action.split(''T'')[1] | int }}'
  - service: climate.set_temperature
    data:
      entity_id: climate.thermostat
      temperature: '{{ temperature }}'
  mode: parallel
- id: '1667823676604'
  alias: 'Apple Watch: temperature report'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Temperature report
  condition: []
  action:
  - variables:
      iphone: notify.mobile_app_{{ trigger.event.data.sourceDeviceName.replace('-',
        '_') }}
  - service: '{{ iphone }}'
    data:
      title: Temperature
      message: 'Living room: {{ states(''sensor.temperature_living_room'') }}°C Bathroom:
        {{ states(''sensor.temperature_bathroom'') }}°C Bedroom: {{ states(''sensor.temperature_bedroom'')
        }}°C Kitchen: {{ states(''sensor.temperature_kitchen'') }}°C Storage: {{ states(''sensor.temperature_storage'')
        }}°C Bedroom Marthe: {{ states(''sensor.temperature_bedroom_marthe'') }}°C
        Outside: {{ state_attr(''weather.buienradar'', ''temperature'') }}°C and it''s
        {{ states(''weather.buienradar'') }}

        '
  mode: parallel
- id: '1667823685422'
  alias: 'Apple Watch: where is other person?'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: Where is
  condition: []
  action:
  - service: notify.mobile_app_{{ phone }}
    data:
      message: '{{ other_person }} is {{ distance(''device_tracker.tom_iphone'', ''device_tracker.tanja_iphone'')
        | round(2) }} km away'
      data:
        push:
          category: MAP
        action_data:
          latitude: '{{ state_attr(device_tracker, ''latitude'') }}'
          longitude: '{{ state_attr(device_tracker, ''longitude'') }}'
  mode: parallel
  variables:
    phone: "{% if trigger.event.data.sourceDeviceName == 'Bizzyphone' %}\n  bizzyphone\n{%
      else %}\n  t_phone\n{% endif %}\n"
    other_person: '{% if phone == ''bizzyphone'' %}Tanja{% else %}Tom{% endif %}'
    device_tracker: device_tracker.{{ other_person }}_iphone
- id: '1667823714405'
  alias: 'Frontend: change theme'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.theme
  - platform: state
    entity_id: input_boolean.dark_mode
  - platform: state
    entity_id: input_boolean.theme_alternative
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: '{% set which = "dark" if is_state("input_boolean.dark_mode", "on") else
        "light" -%} {% set name = states("input_select.theme") -%} {% set suffix =
        "-alternative" if is_state("input_boolean.theme_alternative", "on") else ""
        -%} ios-{{ which }}-mode-{{ name }}{{ suffix }}

        '
  mode: single
- id: '1667823722171'
  alias: 'Frontend: turn on dark mode'
  description: ''
  trigger:
  - platform: time
    at: '20:00'
  - platform: sun
    event: sunset
  condition:
  - '{{ is_state(''input_boolean.dark_mode'', ''off'') }}'
  action:
  - entity_id: input_boolean.dark_mode
    service: input_boolean.turn_on
  mode: single
- id: '1667823729554'
  alias: 'Frontend: turn on light mode'
  description: ''
  trigger:
  - platform: time
    at: 06:00
  - platform: sun
    event: sunrise
  condition:
  - '{{ is_state(''input_boolean.dark_mode'', ''on'') }}'
  action:
  - entity_id: input_boolean.dark_mode
    service: input_boolean.turn_off
  mode: single
- id: '1667823770989'
  alias: 'Medication: Marthe vitamin button pressed'
  description: ''
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kitchen_meds_tom
  condition:
  - '{{ trigger.event.data.event == 1002 }}'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.marthe_vitamins
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja, Marthe haar vitamines geven en ik heb genoteerd dat ze ze gekregen
            heeft.
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.marthe_vitamins
    default:
    - service: tts.google_translate_say
      data:
        entity_id: media_player.kitchen_display
        language: nl
        message: Stop! Marthe heeft haar vitamines al gekregen vandaag.
  mode: single
- id: '1667823778822'
  alias: 'Medication: Marthe vitamin reminder'
  description: ''
  trigger:
  - platform: time
    at: '17:10:00'
  condition:
  - condition: state
    entity_id: input_boolean.marthe_vitamins
    state: 'off'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - service: tts.google_translate_say
    data:
      entity_id: media_player.kitchen_display
      language: nl
      message: Dit is een vriendelijke herinnering dat Marthe haar vitaminen vandaag
        nog niet heeft gekregen.
  - service: notify.all_iphones
    data:
      title: Vitamines Marthe
      message: "Medicatie: Marthe moet haar vitamines nog krijgen. \U0001F48A\U0001F9F8"
  mode: single
- id: '1667823788838'
  alias: 'Medication: reset input_boolean Marthe vitamins at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.marthe_vitamins
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.marthe_vitamins
  mode: single
- id: '1667823799424'
  alias: 'Medication: reset input_boolean Tom medication at midnight'
  description: ''
  trigger:
  - platform: time
    at: 00:00
  condition:
  - condition: state
    entity_id: input_boolean.tom_medication
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.tom_medication
  mode: single
- id: '1667823809138'
  alias: 'Medication: Tom medication button pressed'
  description: ''
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kitchen_meds_tom
  condition:
  - '{{ trigger.event.data.event == 1004 }}'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.tom_medication
        state: 'off'
      sequence:
      - service: tts.google_translate_say
        data:
          entity_id: media_player.kitchen_display
          language: nl
          message: Ja, medicatie nemen en ik heb genoteerd dat je ze genomen hebt.
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.tom_medication
    default:
    - service: tts.google_translate_say
      data:
        entity_id: media_player.kitchen_display
        language: nl
        message: Stop! Je hebt je medicatie al genomen vandaag.
  mode: single
- id: '1667823818714'
  alias: 'Medication: Tom medication reminder'
  description: ''
  trigger:
  - platform: time
    at: '12:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.tom_medication
    state: 'off'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_display
    data:
      volume_level: 0.6
  - service: tts.google_translate_say
    data:
      entity_id: media_player.kitchen_display
      language: nl
      message: Dit is een vriendelijke herinnering dat Tom zijn medicatie vandaag
        nog niet heeft genomen.
  - service: notify.mobile_app_bizzyphone
    data:
      title: Medicatie
      message: "Medicatie: je moet je medicatie nog nemen. \U0001F48A"
  mode: single
- id: '1667823874332'
  alias: 'Solar: grid export too high'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.p1_meter_active_power
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: '-700'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - '{{is_state(''person.tom'', ''home'') or is_state(''person.tanja'', ''home'')}}'
  action:
  - service: '{{ states(''sensor.nearest_iphone_notify'') }}'
    data:
      title: Energy
      message: Grid export is above 0.7kWh, please increase self-consumption. ⚡
  - delay: 00:30:00
  mode: single
- id: '1667823903150'
  alias: 'Leaving: ask to turn off everything'
  description: ''
  trigger:
  - platform: state
    entity_id: person.tom
    from: home
  - platform: state
    entity_id: person.tanja
    from: home
  condition:
  - condition: state
    entity_id:
    - binary_sensor.no_one_home
    - binary_sensor.anything_on
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - delay: 00:05:00
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - service: notify.all_iphones
    data:
      message: No one is home, turn off everything?
      data:
        actions:
        - action: TURN_OFF_EVERYTHING
          title: Turn off everything
          activationMode: background
          authenticationRequired: false
          destructive: true
  mode: single
  initial_state: true
- id: '1667823910453'
  alias: 'Leaving: automatically turn off everything'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.someone_in_the_house_in_last_hour
    from: 'on'
    to: 'off'
    for: 00:01:00
  - platform: time_pattern
    hours: /1
  condition:
  - condition: state
    entity_id:
    - binary_sensor.no_one_home
    - binary_sensor.anything_on
    state: 'on'
  - condition: state
    entity_id:
    - binary_sensor.someone_in_the_house_in_last_hour
    - input_boolean.guest_mode
    state: 'off'
  - '{{ not is_state_attr(''proximity.home'', ''dir_of_travel'', ''towards'') }}'
  action:
  - service: script.leaving
    data: {}
  - service: notify.all_iphones
    data:
      title: Leaving
      message: Everything automatically turned off!
  mode: single
  initial_state: true
- id: '1667823919568'
  alias: 'Leaving: turn off everything after notification'
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: TURN_OFF_EVERYTHING
  condition: []
  action:
  - service: script.leaving
    data: {}
  mode: single
- id: '1667824051618'
  alias: 'Vacuum: air filter needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_filter_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Air filter needs replacing!
  mode: single
- id: '1667824120011'
  alias: 'Vacuum: bin is full'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.vacuum_bin_counter
  condition:
  - '{{ states(''counter.vacuum_bin_counter'')|int % 3 == 0}}'
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Vacuum dust bin is full, please empty it!
  - service: tts.google_translate_say
    data:
      entity_id: media_player.google_home
      language: nl
      message: Het stofbakje van Brenda is vol. Maak het stofbakje leeg alstublieft.
  mode: single
- id: '1667824128611'
  alias: 'Vacuum: cleanup if nobody is home'
  description: ''
  trigger:
  - platform: time
    at: 08:30
  - platform: state
    entity_id: group.persons
    from: home
    to: not_home
  - platform: state
    entity_id: binary_sensor.openclose_guest_bedroom
    from: 'off'
    to: 'on'
  condition:
  - condition: time
    after: 07:00:00
    before: '22:00:00'
  - condition: state
    entity_id: binary_sensor.vacuum_day
    state: 'on'
  - condition: state
    entity_id: group.persons
    state: not_home
  - condition: state
    entity_id: input_boolean.cleaned_today
    state: 'off'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: vacuum.start
    entity_id: vacuum.robot_vacuum
  mode: single
- id: '1667824148003'
  alias: 'Vacuum: main brush needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_main_brush_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Main brush needs replacing!
  mode: single
- id: '1667824157237'
  alias: 'Vacuum: reminder notification'
  description: ''
  trigger:
  - platform: time
    at: 07:00
  condition:
  - condition: state
    entity_id: binary_sensor.vacuum_day
    state: 'on'
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Vacuum will go today, make sure to leave the doors open and leave nothing
        on the floor!
  mode: single
- id: '1667824166657'
  alias: 'Vacuum: reset cleaned today'
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.cleaned_today
  mode: single
  initial_state: true
- id: '1667824176380'
  alias: 'Vacuum: reset to standard mode'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.living_room
    to: docked
  condition: []
  action:
  - service: vacuum.set_fan_speed
    entity_id: vacuum.robot_vacuum
    data:
      fan_speed: Standard
  mode: single
- id: '1667824188262'
  alias: 'Vacuum: sensors need cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_sensor_dirty_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Sensors need cleaning!
  mode: single
- id: '1667824196846'
  alias: 'Vacuum: side brush needs replacing'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: returning
    to: docked
  condition:
  - condition: numeric_state
    entity_id: sensor.robot_vacuum_side_brush_left
    below: 0
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Side brush needs replacing!
  mode: single
- id: '1667824204802'
  alias: 'Vacuum: started cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.robot_vacuum
    from: docked
    to: cleaning
  condition: []
  action:
  - service: notify.all_iphones
    data:
      title: Robot
      message: Robot started to clean!
  mode: single
