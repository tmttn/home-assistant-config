arriving_home:
  alias: Arriving home
  sequence:
  - service: script.set_high_temperature
    data: {}
  - service: script.cozy_lights_living_room
    data: {}
  mode: single
change_the_colors_of_lights:
  alias: Change the colors of lights
  sequence:
  - service: input_select.select_next
    data:
      entity_id: '{{ input_select }}'
  - service: '{{ states(input_select) }}'
  mode: parallel
  fields:
    input_select:
      description: The input select that lists script names.
      example: input_select.last_script_living_room
  max: 10
electric_vehicle_polling_interval_to_60_2:
  alias: Electric vehicle polling interval to 60
  sequence:
  - service: tesla_custom.polling_interval
    data:
      scan_interval: 60
  mode: single
electric_vehicle_polling_interval_to_default_2:
  alias: Electric vehicle polling interval to default
  sequence:
  - service: tesla_custom.polling_interval
    data:
      scan_interval: 660
  mode: single
going_to_sleep_2:
  alias: Going to sleep
  sequence:
  - entity_id: input_select.sleep_mode
    service: input_select.select_option
    data:
      option: total
  - service: script.turn_off_everything_non_automatic
    data: {}
  mode: parallel
  max: 10
leaving_the_house:
  alias: Leaving the house
  sequence:
  - service: script.set_low_temperature
    data: {}
  - service: script.turn_off_everything
    data: {}
  mode: single
reset_manual_control:
  alias: Reset 'manual control'
  sequence:
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_default
      manual_control: false
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_half_and_dim
      manual_control: false
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_half_and_full
      manual_control: false
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_living_room
      manual_control: false
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_outside
      manual_control: false
  mode: single
set_high_temperature_2:
  alias: Set high temperature
  sequence:
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_high") }}

        '
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_high") }}

        '
  mode: single
set_low_temperature_2:
  alias: Set low temperature
  sequence:
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_low") }}

        '
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_low") }}

        '
  mode: single
set_moderate_temperature_2:
  alias: Set moderate temperature
  sequence:
  - service: evohome.set_zone_override
    data:
      entity_id: climate.living_room
      setpoint: '{{ states("input_number.temperature_moderate") }}

        '
  - service: evohome.set_zone_override
    data:
      entity_id: climate.kitchen
      setpoint: '{{ states("input_number.temperature_moderate") }}

        '
  mode: single
start_spotify:
  alias: Start Spotify
  sequence:
  - data:
      uri: 'spotify:playlist:{{ states("sensor.favorite_playlist_of_nearest_person")
        }}

        '
      random_song: true
      shuffle: true
      start_volume: 35
      entity_id: '{{ entity_id }}'
    service: spotcast.start
  description: Start a Spotify playlist on Google Home speakers
  fields:
    entity_id:
      description: entity_id of the speaker
      example: media_player.google_home
  mode: single
turn_off_everything_2:
  alias: Turn off everything
  sequence:
  - service: light.turn_off
    data:
      transition: 4
      entity_id:
      - light.living_room_lights
      - light.bedroom_lights
      - light.bathroom_lights
      - light.guest_bedroom_lights
      - light.christmas_lights_inside
  - service: media_player.turn_off
    entity_id: media_player.tv
  mode: parallel
  max: 10
'1672139014801':
  alias: ''
  sequence:
  - variables:
      start_time: '{{ as_timestamp(now()) }}'
      start_kwh: '{{ states(energy_sensor) }}'
  - wait_for_trigger:
      platform: template
      value_template: '{{ is_state(binary_sensor, ''off'') }}'
    timeout: 04:00:00
    continue_on_timeout: false
  - variables:
      end_time: '{{ as_timestamp(now()) }}'
      end_kwh: '{{ states(energy_sensor) }}'
  - variables:
      total_time: '{{ (end_time - start_time) }}'
      total_kwh: '{{ end_kwh - start_kwh }}'
  - variables:
      minutes: '{{ (total_time / 60) | round(0) }}'
      total_kwh_rounded: '{{ (total_kwh) | round(2) }}'
      price: '{{ (states(''sensor.electricity_price_peak'')|float(default=0) * total_kwh)
        | round(2) }}'
  - service: '{{ states(''sensor.nearest_iphone_notify'') }}'
    data:
      title: Utilities
      message: '{{ friendly_name }} is done after {{ minutes }} minutes and it used
        {{ total_kwh_rounded }} kWh (â‚¬{{ price }}) {{ emojis }}'
  mode: parallel
  max: 20
  fields:
    name:
      description: name
      example: washing_machine
    emojis:
      description: emojis
      example: "\U0001F45A\U0001F455"
  variables:
    binary_sensor: '{{ ''binary_sensor.{}''.format(name) }}'
    friendly_name: '{{ name.capitalize().replace(''_'', '' '') }}'
    energy_sensor: '{{ ''sensor.{}_energy''.format(name) }}'
