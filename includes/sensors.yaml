---
- platform: template
  sensors:
    desk_lamp_watts:
      value_template: >
        {{ state_attr("switch.desk_lamp", "current_power_w") | replace(" W", "") | float("Unavailable") }}
      unit_of_measurement: Watt

    desk_lamp_current:
      friendly_name: "Lamp stroom"
      icon_template: >-
        {% set P = states("sensor.desk_lamp_watts") %}
        {% if P == "Unavailable"  %}
          mdi:cloud-question
        {% elif P | float > 3  %}
          mdi:power-plug
        {% else %}
          mdi:power-plug-off
        {% endif %}
      value_template: >-
        {% set P = states("sensor.desk_lamp_watts") %}
        {% if P == "Unavailable"  %}
          unavailable
        {% elif P | float > 3  %}
          on
        {% else %}
          off
        {% endif %}

    count_automations:
      entity_id: sensor.date
      value_template: "{{ states.automation | count }}"

    count_scripts:
      entity_id: sensor.date
      value_template: "{{ states.script| count }}"

    count_device_trackers:
      entity_id: sensor.date
      value_template: "{{ states.device_tracker | count }}"

    count_binary_sensors:
      entity_id: sensor.date
      value_template: "{{ states.binary_sensor| count }}"

    count_sensors:
      entity_id: sensor.date
      value_template: "{{ states.sensor | count }}"

    count_switches:
      entity_id: sensor.date
      value_template: "{{ states.switch | count }}"

    count_zones:
      entity_id: sensor.date
      value_template: "{{ states.zone | count }}"

    count_input_booleans:
      entity_id: sensor.date
      value_template: "{{ states.input_boolean | count }}"

    count_input_numbers:
      entity_id: sensor.date
      value_template: "{{ states.input_number | count }}"

    count_input_texts:
      entity_id: sensor.date
      value_template: "{{ states.input_text | count }}"

    count_input_selects:
      entity_id: sensor.date
      value_template: "{{ states.input_select | count }}"

    count_input_datetimes:
      entity_id: sensor.date
      value_template: "{{ states.input_datetime | count }}"

- platform: command_line
  name: "RPi CPU Temperature"
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: "{{ value | multiply(0.001) | round(2) }}"

- platform: command_line
  name: "RPi GPU Temperature"
  command: "/opt/vc/bin/vcgencmd measure_temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | replace("temp=", "") | replace("''C", "") }}'

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: "/"
    - type: memory_use_percent
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: processor_use
    - type: last_boot

- platform: dnsip

- platform: time_date

- platform: version
  name: Installed Version
  source: local

- platform: version
  name: Latest Available Version
  beta: false
  image: raspberrypi4
  source: hassio

- platform: uptime
  unit_of_measurement: hours

- platform: filesize
  file_paths:
    - /config/home-assistant_v2.db
    - /config/.storage/lovelace

- platform: github
  access_token: !secret hass_sensor_gh_token
  repositories:
    - path: "basnijholt/lovelace-ios-dark-mode-theme"
    - path: "python-adaptive/adaptive"
    - path: "basnijholt/home-assistant-config"
