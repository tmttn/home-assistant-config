---
#-
#
#  ___  ___ _ __  ___  ___  _ __ ___
# / __|/ _ \ '_ \/ __|/ _ \| '__/ __|
# \__ \  __/ | | \__ \ (_) | |  \__ \
# |___/\___|_| |_|___/\___/|_|  |___/
#
#
#- from github.com/tmttn/home-assistant-config

#  _____                    _       _
# |_   _|__ _ __ ___  _ __ | | __ _| |_ ___    ___  ___ _ __  ___  ___  _ __ ___
#   | |/ _ \ '_ ` _ \| '_ \| |/ _` | __/ _ \  / __|/ _ \ '_ \/ __|/ _ \| '__/ __|
#   | |  __/ | | | | | |_) | | (_| | ||  __/  \__ \  __/ | | \__ \ (_) | |  \__ \
#   |_|\___|_| |_| |_| .__/|_|\__,_|\__\___|  |___/\___|_| |_|___/\___/|_|  |___/
#                    |_|

- platform: template
  sensors:
    count_automations:
      icon_template: mdi:autorenew
      value_template: "{{ states.automation | count }}"

    count_scripts:
      icon_template: mdi:script-text-outline
      value_template: "{{ states.script| count }}"

    count_device_trackers:
      icon_template: mdi:map-marker
      value_template: "{{ states.device_tracker | count }}"

    count_binary_sensors:
      icon_template: mdi:unfold-more-horizontal
      value_template: "{{ states.binary_sensor| count }}"

    count_sensors:
      icon_template: mdi:resistor
      value_template: "{{ states.sensor | count }}"

    count_switches:
      icon_template: mdi:light-switch
      value_template: "{{ states.switch | count }}"

    count_zones:
      icon_template: mdi:map-marker-radius
      value_template: "{{ states.zone | count }}"

    count_input_booleans:
      icon_template: mdi:toggle-switch
      value_template: "{{ states.input_boolean | count }}"

    count_input_numbers:
      icon_template: mdi:numeric
      value_template: "{{ states.input_number | count }}"

    count_input_texts:
      icon_template: mdi:alphabetical
      value_template: "{{ states.input_text | count }}"

    count_input_selects:
      icon_template: mdi:view-list
      value_template: "{{ states.input_select | count }}"

    count_input_datetimes:
      icon_template: mdi:calendar-clock
      value_template: "{{ states.input_datetime | count }}"

    favorite_playlist_of_nearest_person:
      value_template: >
        {% if is_state_attr("proximity.home", "nearest", "tom-iphone") %}
        2GPRgfioefDRYgV17cDlsr
        {% else %}
        2GPRgfioefDRYgV17cDlsr
        {% endif %}

    tv_volume:
      value_template: >
        {{ state_attr("media_player.tv", "volume_level") }}
      unit_of_measurement: "%"

    timestamp_start_of_today:
      value_template: >
        {{ as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0)) }}
      unit_of_measurement: "s"

    time_at_work_prognosis:
      value_template: >
        {% set day = [now().weekday(), 4] | min %}
        {% set t_total = states("sensor.time_at_work_this_week")|float %}
        {% set t_today = states("sensor.time_at_work_today")|float %}
        {% set hours_per_day_including_today = t_total / (day + 1) %}
        {% set hours_per_day_excluding_today = (t_total - t_today ) / (day + 10**-16) %}
        {% set seven_oclock = as_timestamp(now().replace(hour=19).replace(minute=0).replace(second=0)) %}

        {% if t_today > hours_per_day_excluding_today
              or (not is_state("person.tom", "Work") and t_today > 0)
              or (as_timestamp(now()) > seven_oclock)
              or day == 0
              or now().weekday() > 4
              or 5 * hours_per_day_including_today > 40 %}
          {% set hours_per_day = hours_per_day_including_today %}
        {% else %}
          {% set hours_per_day = hours_per_day_excluding_today %}
        {% endif %}

        {{ (5 * hours_per_day)|round(2) }}
      unit_of_measurement: h

    n_days_last_month:
      value_template: >
        {% set start_of_month = now().replace(day=1) %}
        {% set start_of_last_month = start_of_month.replace(month=now().month-1) %}
        {{ ((start_of_month - start_of_last_month).total_seconds() / 86400) | round }}

    nearest_iphone_notify:
      friendly_name: Nearest iPhone's notify service
      value_template: >
        {% if is_state("person.tom", "home") and is_state("person.tanja", "home") %}
          notify.all_iphones
        {% elif is_state_attr("proximity.home", "nearest", "tom-iphone") %}
          notify.mobile_app_tom_iphone
        {% else %}
          notify.mobile_app_tanja_iphone
        {% endif %}

    half_hour_before_alarm:
      friendly_name: Half an hour before alarm
      value_template: >
        {% set t_alarm = state_attr("input_datetime.alarm_clock", "timestamp") | int %}
        {% set t_start = states("sensor.timestamp_start_of_today") | int %}
        {% set half_hour_before_alarm = t_alarm + t_start - 60 * 30 %}
        {{ half_hour_before_alarm | timestamp_custom("%H:%M", True) }}

    ten_minutes_before_alarm:
      friendly_name: Ten minutes before alarm
      value_template: >
        {% set t_alarm = state_attr("input_datetime.alarm_clock", "timestamp") | int %}
        {% set t_start = states("sensor.timestamp_start_of_today") | int %}
        {% set before_alarm = t_alarm + t_start - 60 * 10 %}
        {{ before_alarm | timestamp_custom("%H:%M", True) }}

    hours_outside_per_day_tanja: # XXX: fails when returns "0m"
      friendly_name: Ten minutes before alarm
      value_template: >
        {% set value = state_attr("sensor.quarantine_meter_tanja", "value") %}
        {% if value != None %}
        {% set d, h, m = value.split() %}
        {% set d, h, m = d[:-1] | int, h[:-1] | int, m[:-1] | int %}
        {% set hours_outside = ((14 - d) * 86400 - h * 3600 - m * 60) / 3600 %}
        {{ (hours_outside / 14) | round(1) }}
        {% endif %}

    hours_outside_per_day_tom: # XXX: fails when returns "0m"
      friendly_name: Ten minutes before alarm
      value_template: >
        {% set value = state_attr("sensor.quarantine_meter_tom", "value") %}
        {% if value != None %}
        {% set d, h, m = value.split() %}
        {% set d, h, m = d[:-1] | int, h[:-1] | int, m[:-1] | int %}
        {% set hours_outside = ((14 - d) * 86400 - h * 3600 - m * 60) / 3600 %}
        {{ (hours_outside / 14) | round(1) }}
        {% endif %}

    adaptive_lighting_color_temp_mired:
      unit_of_measurement: "mired"
      value_template: >
        {{ state_attr("switch.adaptive_lighting_living_room", "color_temp_mired") }}

    adaptive_lighting_color_temp_kelvin:
      unit_of_measurement: "K"
      value_template: >
        {{ state_attr("switch.adaptive_lighting_living_room", "color_temp_kelvin") }}

    adaptive_lighting_brightness:
      unit_of_measurement: "%"
      value_template: >
        {{ state_attr("switch.adaptive_lighting_living_room", "brightness_pct") }}

    adaptive_lighting_sun_position:
      unit_of_measurement: "%"
      value_template: >
        {{ 100 * state_attr("switch.adaptive_lighting_living_room", "sun_position") }}

    lights_on_total_hours:
      unit_of_measurement: h
      value_template: >
        {{ states('sensor.hours_bedroom_lights_have_been_on_last_7_days')|float * 3
            + states('sensor.hours_living_room_lights_have_been_on_last_7_days')|float * 10
            + states('sensor.hours_toilet_light_has_been_on_last_7_days')|float * 1
            + states('sensor.hours_bathroom_lights_have_been_on_last_7_days')|float * 4
            + states('sensor.hours_kitchen_lights_have_been_on_last_7_days')|float * 3 }}

    lights_on_total_kwh:
      unit_of_measurement: h
      value_template: >
        {{ states('sensor.lights_on_total_hours')|float * 5.4 / 1000 }}

    motion_sensor_toilet_battery_level:
      unit_of_measurement: '%'
      value_template: '{{state_attr("binary_sensor.motion_sensor_toilet", "battery_level")}}'

    motion_sensor_kitchen_battery_level:
      unit_of_measurement: '%'
      value_template: '{{state_attr("binary_sensor.motion_sensor_kitchen", "battery_level")}}'

    temperature_living_room:
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.woonkamer", "current_temperature")}}'

    temperature_bedroom:
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.slaapkamer", "current_temperature")}}'

    temperature_bathroom:
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.badkamer", "current_temperature")}}'

#   ___  _   _
#  / _ \| |_| |__   ___ _ __ ___
# | | | | __| '_ \ / _ \ '__/ __|
# | |_| | |_| | | |  __/ |  \__ \
#  \___/ \__|_| |_|\___|_|  |___/
#

- platform: min_max
  name: Temperature mean
  type: mean
  entity_ids:
    - sensor.temperature_living_room
    - sensor.temperature_bedroom
    - sensor.temperature_bathroom

- platform: time_date
  display_options:
    - date
    - time

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: "/"
    - type: memory_use_percent
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: processor_use
    - type: last_boot

- platform: dnsip

- platform: version
  name: Installed Version
  source: local

- platform: version
  name: Latest Available Version
  beta: false
  image: raspberrypi3
  source: hassio

- platform: uptime

- platform: filesize
  file_paths:
    - /config/.storage/lovelace

- platform: sql
  db_url: !secret maria_db_url
  queries:
    - name: MariaDB size
      query: >
        SELECT table_schema AS "database",
        ROUND(SUM(data_length + index_length) / 1024 / 1024, 1) "value"
        FROM information_schema.tables WHERE table_schema="homeassistant"
        GROUP BY table_schema;
      column: value
      unit_of_measurement: MB

#  _____ _                  _                  _
# |_   _(_)_ __ ___   ___  | |_ _ __ __ _  ___| | _____ _ __ ___
#   | | | | '_ ` _ \ / _ \ | __| '__/ _` |/ __| |/ / _ \ '__/ __|
#   | | | | | | | | |  __/ | |_| | | (_| | (__|   <  __/ |  \__ \
#   |_| |_|_| |_| |_|\___|  \__|_|  \__,_|\___|_|\_\___|_|  |___/
#

- platform: history_stats
  name: Hours TV has been on last 7 days
  entity_id: media_player.tv
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times TV has been on last 7 days
  entity_id: media_player.tv
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours dishwasher has been on last 7 days
  entity_id: binary_sensor.dishwasher
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times dishwasher has been on last 7 days
  entity_id: binary_sensor.dishwasher
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours washing machine has been on last 7 days
  entity_id: binary_sensor.washing_machine
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times washing machine has been on last 7 days
  entity_id: binary_sensor.washing_machine
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Quarantine meter Tom
  entity_id: person.tom
  state: "home"
  type: ratio
  duration:
    days: 14
  end: "{{ now() }}"

- platform: history_stats
  name: Quarantine meter Tanja
  entity_id: person.tanja
  state: "home"
  type: ratio
  duration:
    days: 14
  end: "{{ now() }}"

- platform: history_stats
  name: Quarantine meter Tom times left
  entity_id: person.tom
  state: "home"
  type: count
  duration:
    days: 14
  end: "{{ now() }}"

- platform: history_stats
  name: Quarantine meter Tanja times left
  entity_id: person.tanja
  state: "home"
  type: count
  duration:
    days: 14
  end: "{{ now() }}"

- platform: history_stats
  name: Hours bedroom lights have been on last 7 days
  entity_id: light.bedroom_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours living room lights have been on last 7 days
  entity_id: light.living_room_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours toilet light has been on last 7 days
  entity_id: light.toilet
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours kitchen lights have been on last 7 days
  entity_id: light.kitchen_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours bathroom lights have been on last 7 days
  entity_id: light.bathroom_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

  # __        __         _      _   _                  _                  _
# \ \      / /__  _ __| | __ | |_(_)_ __ ___   ___  | |_ _ __ __ _  ___| | _____ _ __
#  \ \ /\ / / _ \| '__| |/ / | __| | '_ ` _ \ / _ \ | __| '__/ _` |/ __| |/ / _ \ '__|
#   \ V  V / (_) | |  |   <  | |_| | | | | | |  __/ | |_| | | (_| | (__|   <  __/ |
#    \_/\_/ \___/|_|  |_|\_\  \__|_|_| |_| |_|\___|  \__|_|  \__,_|\___|_|\_\___|_|
#

- platform: history_stats
  name: Time at work this week
  entity_id: person.tom
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float - now().weekday() * 86400 }}
  end: "{{ now() }}"

- platform: history_stats
  name: Time at work today
  entity_id: person.tom
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float - 0 * 86400 }}
  duration:
    hours: 24

- platform: history_stats
  name: Time at work on Monday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 0 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Tuesday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 1 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Wednessday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 2 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Thursday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 3 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Friday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 4 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: afvalbeheer
  wastecollector: Limburg.NET
  resources:
    - restafval
    - gft
    - papier
    - pmd
  postcode: !secret postal_code
  streetname: !secret street_name
  cityname: !secret city_name
  streetnumber: !secret street_number
  upcomingsensor: 1
  builtinicons: 1
  dutch: 1
