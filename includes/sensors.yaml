---
#-
#
#  ___  ___ _ __  ___  ___  _ __ ___
# / __|/ _ \ '_ \/ __|/ _ \| '__/ __|
# \__ \  __/ | | \__ \ (_) | |  \__ \
# |___/\___|_| |_|___/\___/|_|  |___/
#
#
#- from github.com/tmttn/home-assistant-config

#  _____                    _       _
# |_   _|__ _ __ ___  _ __ | | __ _| |_ ___    ___  ___ _ __  ___  ___  _ __ ___
#   | |/ _ \ '_ ` _ \| '_ \| |/ _` | __/ _ \  / __|/ _ \ '_ \/ __|/ _ \| '__/ __|
#   | |  __/ | | | | | |_) | | (_| | ||  __/  \__ \  __/ | | \__ \ (_) | |  \__ \
#   |_|\___|_| |_| |_| .__/|_|\__,_|\__\___|  |___/\___|_| |_|___/\___/|_|  |___/
#                    |_|

- platform: template
  sensors:
    count_automations:
      unique_id: count_automations
      icon_template: mdi:autorenew
      value_template: "{{ states.automation | count }}"

    count_scripts:
      unique_id: count_scripts
      icon_template: mdi:script-text-outline
      value_template: "{{ states.script| count }}"

    count_device_trackers:
      unique_id: count_device_trackers
      icon_template: mdi:map-marker
      value_template: "{{ states.device_tracker | count }}"

    count_binary_sensors:
      unique_id: count_binary_sensors
      icon_template: mdi:unfold-more-horizontal
      value_template: "{{ states.binary_sensor| count }}"

    count_sensors:
      unique_id: count_sensors
      icon_template: mdi:resistor
      value_template: "{{ states.sensor | count }}"

    count_switches:
      unique_id: count_switches
      icon_template: mdi:light-switch
      value_template: "{{ states.switch | count }}"

    count_zones:
      unique_id: count_zones
      icon_template: mdi:map-marker-radius
      value_template: "{{ states.zone | count }}"

    count_input_booleans:
      unique_id: count_input_booleans
      icon_template: mdi:toggle-switch
      value_template: "{{ states.input_boolean | count }}"

    count_input_numbers:
      unique_id: count_input_numbers
      icon_template: mdi:numeric
      value_template: "{{ states.input_number | count }}"

    count_input_texts:
      unique_id: count_input_texts
      icon_template: mdi:alphabetical
      value_template: "{{ states.input_text | count }}"

    count_input_selects:
      unique_id: count_input_selects
      icon_template: mdi:view-list
      value_template: "{{ states.input_select | count }}"

    count_input_datetimes:
      unique_id: count_input_datetimes
      icon_template: mdi:calendar-clock
      value_template: "{{ states.input_datetime | count }}"

    favorite_playlist_of_nearest_person:
      unique_id: favorite_playlist_of_nearest_person
      value_template: >
        {% if is_state_attr("proximity.home", "nearest", "Tom iPhone") %}
        2GPRgfioefDRYgV17cDlsr
        {% else %}
        2GPRgfioefDRYgV17cDlsr
        {% endif %}

    tv_volume:
      unique_id: tv_volume
      value_template: >
        {{ state_attr("media_player.tv", "volume_level") }}
      unit_of_measurement: "%"

    timestamp_start_of_today:
      unique_id: timestamp_start_of_today
      value_template: >
        {{ as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0)) }}
      unit_of_measurement: "s"

    time_at_work_prognosis:
      unique_id: time_at_work_prognosis
      value_template: >
        {% set day = [now().weekday(), 4] | min %}
        {% set t_total = states("sensor.time_at_work_this_week")|float(default=0) %}
        {% set t_today = states("sensor.time_at_work_today")|float(default=0) %}
        {% set hours_per_day_including_today = t_total / (day + 1) %}
        {% set hours_per_day_excluding_today = (t_total - t_today ) / (day + 10**-16) %}
        {% set seven_oclock = as_timestamp(now().replace(hour=19).replace(minute=0).replace(second=0)) %}

        {% if t_today > hours_per_day_excluding_today
              or (not is_state("person.tom", "Work") and t_today > 0)
              or (as_timestamp(now()) > seven_oclock)
              or day == 0
              or now().weekday() > 4
              or 5 * hours_per_day_including_today > 40 %}
          {% set hours_per_day = hours_per_day_including_today %}
        {% else %}
          {% set hours_per_day = hours_per_day_excluding_today %}
        {% endif %}

        {{ (5 * hours_per_day)|round(2) }}
      unit_of_measurement: h

    n_days_last_month:
      unique_id: n_days_last_month
      value_template: >
        {% set start_of_month = now().replace(day=1) %}
        {% set last_month = now().month - 1 %}
        {% set last_month_year = now().year %}
        {% if last_month == 0 %}
          {% set last_month = 12 %}
          {% set last_month_year = now().year - 1 %}
        {% endif %}
        {% set start_of_last_month = start_of_month.replace(month=last_month, year=last_month_year) %}
        {{ ((start_of_month - start_of_last_month).total_seconds() / 86400) | round }}

    daily_power:
      unique_id: daily_power
      friendly_name: Daily Power
      unit_of_measurement: kWh
      value_template: >
        {{ states("sensor.daily_power_offpeak")|float(default=0) + states("sensor.daily_power_peak")|float(default=0) }}

    monthly_power:
      unique_id: monthly_power
      friendly_name: Monthly Power
      unit_of_measurement: kWh
      value_template: >
        {{ states("sensor.monthly_power_offpeak")|float(default=0) + states("sensor.monthly_power_peak")|float(default=0) }}

    monthly_power_last_period:
      unique_id: monthly_power_last_period
      friendly_name: Monthly Power (Last period)
      unit_of_measurement: kWh
      value_template: >
        {{ state_attr("sensor.monthly_power_offpeak", "last_period")|float(default=0) + state_attr("sensor.monthly_power_peak", "last_period")|float(default=0) }}

    monthly_power_cost_last_period:
      unique_id: monthly_power_cost_last_period
      friendly_name: Monthly Power (Last period)
      unit_of_measurement: €
      value_template: >
        {{ (state_attr("sensor.monthly_power_offpeak", "last_period")|float(default=0) * states("sensor.electricity_price_offpeak")|float(default=0)
            + state_attr("sensor.monthly_power_peak", "last_period")|float(default=0) * states("sensor.electricity_price_peak")|float(default=0)) | round(2) }}

    gas_price:
      unique_id: gas_price
      friendly_name: Gas price
      unit_of_measurement: €/m³
      value_template: >
        {{ 0.940036171 }}

    daily_gas_cost:
      unique_id: daily_gas_cost
      friendly_name: Daily Gas
      unit_of_measurement: €
      value_template: >
        {{ (states("sensor.daily_gas")|float(default=0) *states("sensor.gas_price")|float(default=0)) | round(2) }}

    monthly_gas_cost:
      unique_id: monthly_gas_cost
      friendly_name: Monthly Gas
      unit_of_measurement: €
      value_template: >
        {{ (states("sensor.monthly_gas")|float(default=0) * states("sensor.gas_price")|float(default=0)) | round(2) }}

    monthly_gas_last_period:
      unique_id: monthly_gas_last_period
      friendly_name: Monthly Gas (Last period)
      unit_of_measurement: kWh
      value_template: >
        {{ state_attr("sensor.monthly_gas", "last_period")|float(default=0) }}

    monthly_gas_cost_last_period:
      unique_id: monthly_gas_cost_last_period
      friendly_name: Monthly Gas (Last period)
      unit_of_measurement: €
      value_template: >
        {{ (state_attr("sensor.monthly_gas", "last_period")|float(default=0) * states("sensor.gas_price")|float(default=0)) | round(2) }}

    electricity_price_offpeak:
      unique_id: electricity_price_offpeak
      friendly_name: Electricity price
      unit_of_measurement: €/kWh
      value_template: >
        {{ 0.265939 }}

    electricity_price_peak:
      unique_id: electricity_price_peak
      friendly_name: Electricity price
      unit_of_measurement: €/kWh
      value_template: >
        {{ 0.284039 }}

    electricity_price_injection:
      unique_id: electricity_price_injection
      friendly_name: Electricity injection price
      unit_of_measurement: €/kWh
      value_template: >
        {{ 0.0949 }}

    daily_power_cost:
      unique_id: daily_power_cost
      friendly_name: Daily Power
      unit_of_measurement: €
      value_template: >
        {{ (states("sensor.daily_power_offpeak")|float(default=0) * states("sensor.electricity_price_offpeak")|float(default=0)
            + states("sensor.daily_power_peak")|float(default=0) * states("sensor.electricity_price_peak")|float(default=0)) | round(2) }}

    monthly_power_cost:
      unique_id: monthly_power_cost
      friendly_name: Monthly Power
      unit_of_measurement: €
      value_template: >
        {{ (states("sensor.monthly_power_offpeak")|float(default=0) * states("sensor.electricity_price_offpeak")|float(default=0)
            + states("sensor.monthly_power_peak")|float(default=0) * states("sensor.electricity_price_peak")|float(default=0)) | round(2) }}

    daily_energy_fixed_cost:
      unique_id: daily_energy_fixed_cost
      friendly_name: Fixed daily energy cost (gas and power)
      unit_of_measurement: €
      value_template: >
        {% set _ = states("sensor.date") %}
        {{ 1.05668 + 0.43719 }}

    monthly_energy_fixed_cost:
      unique_id: monthly_energy_fixed_cost
      friendly_name: Fixed monthly energy cost (gas and power)
      unit_of_measurement: €
      value_template: >
        {{ states("sensor.daily_energy_fixed_cost")|float(default=0) * now().day }}

    monthly_energy_fixed_cost_last_period:
      unique_id: monthly_energy_fixed_cost_last_period
      friendly_name: Fixed energy cost (gas and power) (Last period)
      unit_of_measurement: €
      value_template: >
        {{ states("sensor.daily_energy_fixed_cost")|float(default=0) * states("sensor.n_days_last_month")|int(default=0) }}

    nearest_iphone_notify:
      unique_id: nearest_iphone_notify
      friendly_name: Nearest iPhone's notify service
      value_template: >
        {% if is_state("person.tom", "home") and is_state("person.tanja", "home") %}
          notify.all_iphones
        {% elif is_state_attr("proximity.home", "nearest", "Tom iPhone") %}
          notify.mobile_app_bizzyphone
        {% else %}
          notify.mobile_app_t_phone
        {% endif %}

    half_hour_before_alarm:
      unique_id: half_hour_before_alarm
      friendly_name: Half an hour before alarm
      value_template: >
        {% set t_alarm = state_attr("input_datetime.alarm_clock", "timestamp") | int %}
        {% set t_start = states("sensor.timestamp_start_of_today") | int %}
        {% set half_hour_before_alarm = t_alarm + t_start - 60 * 30 %}
        {{ half_hour_before_alarm | timestamp_custom("%H:%M", True) }}

    ten_minutes_before_alarm:
      unique_id: ten_minutes_before_alarm
      friendly_name: Ten minutes before alarm
      value_template: >
        {% set t_alarm = state_attr("input_datetime.alarm_clock", "timestamp") | int %}
        {% set t_start = states("sensor.timestamp_start_of_today") | int %}
        {% set before_alarm = t_alarm + t_start - 60 * 10 %}
        {{ before_alarm | timestamp_custom("%H:%M", True) }}
    lights_on_total_hours:
      unique_id: lights_on_total_hours
      unit_of_measurement: h
      value_template: >
        {{ states('sensor.hours_bedroom_lights_have_been_on_last_7_days')|float(default=0) * 3
            + states('sensor.hours_guest_bedroom_lights_have_been_on_last_7_days')|float(default=0) * 1
            + states('sensor.hours_living_room_lights_have_been_on_last_7_days')|float(default=0) * 10
            + states('sensor.hours_toilet_light_has_been_on_last_7_days')|float(default=0) * 1
            + states('sensor.hours_bathroom_lights_have_been_on_last_7_days')|float(default=0) * 4
            + states('sensor.hours_kitchen_lights_have_been_on_last_7_days')|float(default=0) * 3
            + states('sensor.hours_terrace_lights_have_been_on_last_7_days')|float(default=0) * 3
            + states('sensor.hours_outside_lights_have_been_on_last_7_days')|float(default=0) * 3 }}

    lights_on_total_kwh:
      unique_id: lights_on_total_kwh
      unit_of_measurement: h
      value_template: >
        {{ states('sensor.lights_on_total_hours')|float(default=0) * 5.4 / 1000 }}

    temperature_living_room:
      unique_id: temperature_living_room
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.living_room", "current_temperature")}}'

    temperature_bedroom:
      unique_id: temperature_bedroom
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.bedroom", "current_temperature")}}'

    temperature_bathroom:
      unique_id: temperature_bathroom
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.bathroom", "current_temperature")}}'

    temperature_kitchen:
      unique_id: temperature_kitchen
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.kitchen", "current_temperature")}}'

    temperature_bedroom_marthe:
      unique_id: temperature_bedroom_marthe
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.bedroom_marthe", "current_temperature")}}'

    temperature_storage:
      unique_id: temperature_storage
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.storage", "current_temperature")}}'

    temperature_hall:
      unique_id: temperature_hall
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.hall", "current_temperature")}}'

    temperature_guest_bedroom:
      unique_id: temperature_guest_bedroom
      unit_of_measurement: '°C'
      value_template: '{{state_attr("climate.guest_bedroom", "current_temperature")}}'

    total_grid_export:
      unique_id: total_grid_export
      unit_of_measurement: kWh
      value_template: '{{states("sensor.p1_meter_total_power_export_t1")|float(default=0) + states("sensor.p1_meter_total_power_export_t2")|float(default=0)}}'

#   ___  _   _
#  / _ \| |_| |__   ___ _ __ ___
# | | | | __| '_ \ / _ \ '__/ __|
# | |_| | |_| | | |  __/ |  \__ \
#  \___/ \__|_| |_|\___|_|  |___/
#
- platform: statistics
  name: Washing machine Today's Consumption
  unique_id: washing_machine_today_consumption
  entity_id: sensor.washing_machine_energy_consumption
  state_characteristic: total
  sampling_size: 86400 # make sure all data points of the last 24hrs are included
  max_age:
    hours: 24

- platform: statistics
  name: Humidity bathroom stats
  unique_id: humidity_bathroom_stats
  entity_id: sensor.multi_sensor_bathroom_humidity
  state_characteristic: mean
  sampling_size: 86400 # make sure all data points of the last 24hrs are included
  max_age:
    hours: 24

- platform: derivative
  source: sensor.multi_sensor_bathroom_humidity
  name: Humidity bathroom derivative
  unit_time: min
  time_window: "00:10:00"

- platform: statistics
  name: Humidity storage stats
  unique_id: humidity_storage_stats
  entity_id: sensor.multi_sensor_storage_humidity
  state_characteristic: mean
  sampling_size: 86400 # make sure all data points of the last 24hrs are included
  max_age:
    hours: 24

- platform: derivative
  source: sensor.multi_sensor_storage_humidity
  name: Humidity storage derivative
  unit_time: min
  time_window: "00:10:00"

- platform: min_max
  name: Temperature mean
  type: mean
  entity_ids:
    - sensor.temperature_living_room
    - sensor.temperature_bedroom
    - sensor.temperature_bathroom
    - sensor.temperature_kitchen
    - sensor.temperature_storage
    - sensor.temperature_bedroom_marthe

- platform: time_date
  display_options:
    - date
    - time

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: "/"
    - type: memory_use_percent
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: processor_use
    - type: last_boot

- platform: integration
  source: sensor.hombli_smart_outdoor_socket_1_power
  name: gas_burner_consumption
  unique_id: "gas_burner_consumption"
  unit_prefix: k
  round: 2

- platform: integration
  source: sensor.hombli_smart_outdoor_socket_2_power
  name: heat_pump_boiler_consumption
  unique_id: "heat_pump_boiler_consumption"
  unit_prefix: k
  round: 2

- platform: integration
  source: sensor.hombli_smart_outdoor_socket_3_power
  name: guest_bedroom_pc_consumption
  unique_id: "guest_bedroom_pc_consumption"
  unit_prefix: k
  round: 2

#  _____ _                  _                  _
# |_   _(_)_ __ ___   ___  | |_ _ __ __ _  ___| | _____ _ __ ___
#   | | | | '_ ` _ \ / _ \ | __| '__/ _` |/ __| |/ / _ \ '__/ __|
#   | | | | | | | | |  __/ | |_| | | (_| | (__|   <  __/ |  \__ \
#   |_| |_|_| |_| |_|\___|  \__|_|  \__,_|\___|_|\_\___|_|  |___/
#

- platform: history_stats
  name: Hours TV has been on last 7 days
  entity_id: media_player.tv
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times TV has been on last 7 days
  entity_id: media_player.tv
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours dishwasher has been on last 7 days
  entity_id: binary_sensor.dishwasher
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times dishwasher has been on last 7 days
  entity_id: binary_sensor.dishwasher
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours tumble dryer has been on last 7 days
  entity_id: binary_sensor.tumble_dryer
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times tumble dryer has been on last 7 days
  entity_id: binary_sensor.tumble_dryer
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours espresso machine has been on last 7 days
  entity_id: binary_sensor.espresso_machine
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times espresso machine has been on last 7 days
  entity_id: binary_sensor.espresso_machine
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours washing machine has been on last 7 days
  entity_id: binary_sensor.washing_machine
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Times washing machine has been on last 7 days
  entity_id: binary_sensor.washing_machine
  state: "on"
  type: count
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours bedroom lights have been on last 7 days
  entity_id: light.bedroom_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours guest bedroom lights have been on last 7 days
  entity_id: light.guest_bedroom_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours living room lights have been on last 7 days
  entity_id: light.living_room_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours toilet light has been on last 7 days
  entity_id: light.toilet
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours kitchen lights have been on last 7 days
  entity_id: light.kitchen_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours bathroom lights have been on last 7 days
  entity_id: light.bathroom_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours terrace lights have been on last 7 days
  entity_id: light.terrace_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Hours outside lights have been on last 7 days
  entity_id: light.outside_lights
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

# __        __         _      _   _                  _                  _
# \ \      / /__  _ __| | __ | |_(_)_ __ ___   ___  | |_ _ __ __ _  ___| | _____ _ __
#  \ \ /\ / / _ \| '__| |/ / | __| | '_ ` _ \ / _ \ | __| '__/ _` |/ __| |/ / _ \ '__|
#   \ V  V / (_) | |  |   <  | |_| | | | | | |  __/ | |_| | | (_| | (__|   <  __/ |
#    \_/\_/ \___/|_|  |_|\_\  \__|_|_| |_| |_|\___|  \__|_|  \__,_|\___|_|\_\___|_|
#

- platform: history_stats
  name: Time at work this week
  entity_id: person.tom
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - now().weekday() * 86400 }}
  end: "{{ now() }}"

- platform: history_stats
  name: Time at work today
  entity_id: person.tom
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - 0 * 86400 }}
  duration:
    hours: 24

- platform: history_stats
  name: Time at work on Monday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 0 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - day * 86400}}

- platform: history_stats
  name: Time at work on Tuesday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 1 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - day * 86400}}

- platform: history_stats
  name: Time at work on Wednessday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 2 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - day * 86400}}

- platform: history_stats
  name: Time at work on Thursday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 3 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - day * 86400}}

- platform: history_stats
  name: Time at work on Friday
  entity_id: person.tom
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 4 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float(default=0) - day * 86400}}

# Waste management
- platform: afvalbeheer
  wastecollector: Limburg.NET
  resources:
    - restafval
    - gft
    - papier
    - pmd
  postcode: !secret postal_code
  streetname: !secret street_name
  cityname: !secret city_name
  streetnumber: !secret street_number
  upcomingsensor: 1
  builtinicons: 1
  dutch: 1
