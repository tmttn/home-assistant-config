---
- platform: template
  sensors:
    washing_machine_watts:
      value_template: >
        {{ state_attr("switch.washing_machine", "current_power_w") | replace(" W", "") | float("Unavailable") }}
      unit_of_measurement: Watt
      friendly_name: Washing machine usage

    dishwasher_watts:
      value_template: >
        {{ state_attr("switch.dishwasher", "current_power_w") | replace(" W", "") | float("Unavailable") }}
      unit_of_measurement: Watt
      friendly_name: Dishwasher usage

    count_automations:
      entity_id: sensor.date
      value_template: "{{ states.automation | count }}"
      unit_of_measurement: automations

    count_scripts:
      entity_id: sensor.date
      value_template: "{{ states.script| count }}"
      unit_of_measurement: scripts

    count_device_trackers:
      entity_id: sensor.date
      value_template: "{{ states.device_tracker | count }}"
      unit_of_measurement: device_trackers

    count_binary_sensors:
      entity_id: sensor.date
      value_template: "{{ states.binary_sensor| count }}"
      unit_of_measurement: binary_sensors

    count_sensors:
      entity_id: sensor.date
      value_template: "{{ states.sensor | count }}"
      unit_of_measurement: sensors

    count_switches:
      entity_id: sensor.date
      value_template: "{{ states.switch | count }}"
      unit_of_measurement: switches

    count_zones:
      entity_id: sensor.date
      value_template: "{{ states.zone | count }}"
      unit_of_measurement: zones

    count_input_booleans:
      entity_id: sensor.date
      value_template: "{{ states.input_boolean | count }}"
      unit_of_measurement: input_booleans

    count_input_numbers:
      entity_id: sensor.date
      value_template: "{{ states.input_number | count }}"
      unit_of_measurement: input_numbers

    count_input_texts:
      entity_id: sensor.date
      value_template: "{{ states.input_text | count }}"
      unit_of_measurement: input_texts

    count_input_selects:
      entity_id: sensor.date
      value_template: "{{ states.input_select | count }}"
      unit_of_measurement: input_selects

    count_input_datetimes:
      entity_id: sensor.date
      value_template: "{{ states.input_datetime | count }}"
      unit_of_measurement: input_datetimes

    favorite_playlist_of_nearest_person:
      value_template: >
        {% if state_attr('proximity.home', 'nearest') == "basnijholt-iphone"%}
        6rPTm9dYftKcFAfwyRqmDZ
        {% else %}
        2Alq4aFJY8jRA2MnBL5d9A
        {% endif %}

    tv_volume:
      value_template: >
        {{ state_attr("media_player.tv", "volume_level") }}
      unit_of_measurement: "%"

    kef_volume:
      value_template: >
        {{ state_attr("media_player.kef", "volume_level") }}
      unit_of_measurement: "%"

    timestamp_start_of_today:
      value_template: >
        {{ as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0)) }}
      unit_of_measurement: "s"

    time_at_work_prognosis:
      value_template: >
        {% set day = [now().weekday(), 4] | min %}
        {% set t_total = states("sensor.time_at_work_this_week")|float %}
        {% set t_today = states("sensor.time_at_work_today")|float %}
        {% set hours_per_day_including_today = t_total / (day + 1) %}
        {% set hours_per_day_excluding_today = (t_total - t_today ) / (day + 10**-16) %}
        {% set seven_oclock = as_timestamp(now().replace(hour=19).replace(minute=0).replace(second=0)) %}

        {% if t_today > hours_per_day_excluding_today
              or (not is_state("person.bas", "Work") and t_today > 0)
              or (as_timestamp(now()) > seven_oclock)
              or day == 0 %}
          {% set hours_per_day = hours_per_day_including_today %}
        {% else %}
          {% set hours_per_day = hours_per_day_excluding_today %}
        {% endif %}
        {{ (5 * hours_per_day)|round(2) }}
      unit_of_measurement: h

- platform: min_max
  name: Temperature mean
  type: mean
  entity_ids:
    - sensor.temperature_living_room
    - sensor.temperature_bedroom
    - sensor.temperature_bathroom
    - sensor.temperature_hall

- platform: command_line
  name: RPi CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: "{{ value | multiply(0.001) | round(2) }}"

- platform: command_line
  name: RPi GPU Temperature
  command: "/opt/vc/bin/vcgencmd measure_temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | replace("temp=", "") | replace("''C", "") }}'

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: "/"
    - type: memory_use_percent
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: processor_use
    - type: last_boot

- platform: dnsip

- platform: time_date

- platform: version
  name: Installed Version
  source: local

- platform: version
  name: Latest Available Version
  beta: false
  image: raspberrypi4
  source: hassio

- platform: uptime
  unit_of_measurement: hours

- platform: filesize
  file_paths:
    - /config/home-assistant_v2.db
    - /config/.storage/lovelace

- platform: github
  access_token: !secret hass_sensor_gh_token
  repositories:
    - path: "basnijholt/lovelace-ios-dark-mode-theme"
    - path: "python-adaptive/adaptive"
    - path: "basnijholt/home-assistant-config"


# Work time tracker

- platform: history_stats
  name: Time at work this week
  entity_id: person.bas
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float - now().weekday() * 86400 }}
  end: "{{ now() }}"

- platform: history_stats
  name: Time at work today
  entity_id: person.bas
  state: Work
  type: time
  start: >
    {{ states("sensor.timestamp_start_of_today")|float - 0 * 86400 }}
  duration:
    hours: 24

- platform: history_stats
  name: Time at work on Monday
  entity_id: person.bas
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 0 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Tuesday
  entity_id: person.bas
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 1 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Wednessday
  entity_id: person.bas
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 2 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Thursday
  entity_id: person.bas
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 3 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}

- platform: history_stats
  name: Time at work on Friday
  entity_id: person.bas
  state: Work
  type: time
  duration:
    hours: 24
  start: >
    {% set day = now().weekday() - 4 %}
    {% if day < 0 %}{% set day = day + 7 %}{% endif %}
    {{ states("sensor.timestamp_start_of_today")|float - day * 86400}}
