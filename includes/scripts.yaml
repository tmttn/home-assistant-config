---
start_speakers:
  alias: Start speakers
  description: "Start a Spotify playlist on KEF speakers"
  fields:
    volume:
      description: "Volume at which to play"
      example: "0.3"
    source:
      description: "Which source to use on the speakers"
      example: "Wifi"
  sequence:
    - service: media_player.turn_on
      entity_id: media_player.kef
    - service: media_player.select_source
      entity_id: media_player.kef
      data_template:
        source: "{{ source }}"
    - wait_template: "{{ is_state('media_player.kef', 'on') }}"
      timeout: "00:01:00"
      continue_on_timeout: "false"
    - service: media_player.volume_set
      entity_id: media_player.kef
      data_template:
        volume_level: "{{ volume }}"

start_spotify:
  alias: Start Spotify
  description: "Start a Spotify playlist on KEF speakers"
  fields:
    source:
      description: "The name of the speaker as it appears in Spotify"
      example: "KEF LS50 Wireless"
    playlist:
      description: "The playlist URI from Spotify"
      example: "6rPTm9dYftKcFAfwyRqmDZ"
  sequence:
    - service: homeassistant.update_entity
      entity_id: media_player.spotify
    - wait_template: "{{ source in state_attr('media_player.spotify', 'source_list')  }}"
      timeout: "00:01:00"
      continue_on_timeout: "false"
    - service: media_player.select_source
      entity_id: media_player.spotify
      data_template:
        source: "{{ source }}"
    - service: spotify.play_playlist
      data_template:
        media_content_id: "spotify:playlist:{{ playlist }}"
        random_song: true
    - service: media_player.media_play
      entity_id: media_player.spotify


ramp_volume:
  alias: Ramp volume of speaker
  description: Slowly ramp up the volume of a speaker over a period of time.
  fields:
    source:
      description: The name of the media_player.
      example: media_player.kef
    total_time:
      description: Total duration in time for the speaker to ramp.
      example: 400
    final_volume:
      description: The final volume of the media_player between 0 and 1.
      example: 0.25
    volume_step:
      description: Change in volume
      example: 0.01
  sequence:
    # - condition: template  # this doesn't work!
    #   value_template: >
    #     {{ state_attr(source, "volume_level") <= final_volume }}
    - service: media_player.volume_set
      data_template:
        entity_id: "{{ source }}"
        volume_level: >
          {{ state_attr(source, "volume_level") + volume_step }}
    - service: input_number.set_value
      data_template:
        entity_id: input_number.volume_last
        value: "{{ state_attr(source, 'volume_level') }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.volume_delay
        value: >
          {{ total_time / (final_volume / volume_step)|int }}
    - delay:
        milliseconds: "{{ (1000 * states('input_number.volume_delay'))|int }}"
    - service: script.ramp_volume_loop

ramp_volume_loop:
  sequence:
    - service: script.ramp_volume
      data:
        source: media_player.kef
        total_time: 30
        final_volume: 0.25
        volume_step: 0.01
